<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ORGCOSTRECORD">
    
	<select id="query" resultType="map" parameterType="map">
		SELECT
			applyId, 
			orgId,
			channelCode,
			dataType,
			`status`,
			customerId, 
			price, 
			DATE_FORMAT(createTime,'%Y-%m-%d %H:%i:%s') as createTime ,
			DATE_FORMAT(updateTime,'%Y-%m-%d %H:%i:%s') as updateTime   
		FROM t_org_cost_record
		<where>
			<if test="orgId != null and orgId != ''">
			  and orgId = #{orgId}
			 </if>
			<if test="applyId != null and applyId != ''">
				and applyId = #{applyId}
			</if>
			<if test="customerId != null and customerId != ''">
				and customerId = #{customerId}
			</if>
			<if test="status != null and status != ''">
				and `status` = #{status}
			</if>
		</where>
		<if test="orderSql != null and orderSql!='' "> 
			ORDER by ${orderSql}
		</if>
	</select>

	<!-- <select id="count" resultType="int" parameterType="map">
		SELECT COUNT(*) FROM t_org_cost_record 
		<where>
			<if test="orgId != null and orgId != ''">
			  and orgId = #{orgId}
			 </if>
			<if test="applyId != null and applyId != ''">
				and applyId = #{applyId}
			</if>
			<if test="customerId != null and customerId != ''">
				and customerId = #{customerId}
			</if>
			<if test="status != null and status != ''">
				and `status` = #{status}
			</if>
		</where>
		<if test="orderSql != null and orderSql!='' "> 
			ORDER by ${orderSql}
		</if>
	</select> -->

	<select id="count" resultType="int" parameterType="map">
		SELECT COUNT(*) FROM t_org_cost_record 
		<where>
			<if test="orgId != null and orgId != ''">
			  and orgId = #{orgId}
			 </if>
			<if test="applyId != null and applyId != ''">
				and applyId = #{applyId}
			</if>
			<if test="customerId != null and customerId != ''">
				and customerId = #{customerId}
			</if>
			<if test="status != null and status != ''">
				and `status` = #{status}
			</if>
		</where>
	</select>
	
	<insert id="insert" parameterType="map">
		INSERT INTO t_org_cost_record (
			applyId,
			channelCode,
			dataType,
			customerId,
			orgId,
			price,
			`status`,
			createTime
		)
		VALUES (
		#{applyId, jdbcType=BIGINT,typeHandler=NumberHandler}, 
		#{channelCode, jdbcType=VARCHAR}, 
		<if test="dataType !=null ">
		#{dataType, jdbcType=INTEGER,typeHandler=NumberHandler},
		</if>
		<if test="dataType ==null ">
		0,
		</if>
		#{customerId, jdbcType=BIGINT,typeHandler=NumberHandler},
		#{orgId, jdbcType=BIGINT,typeHandler=NumberHandler},
		#{price, jdbcType=NUMERIC,typeHandler=NumberHandler},
		<if test="status !=null ">
		#{status, jdbcType=INTEGER,typeHandler=NumberHandler},
		</if>
		<if test="status ==null ">
		1,
		</if>
		#{createTime, jdbcType=TIMESTAMP,typeHandler=DateHandler}
		)
	</insert>
	<delete id="delete" parameterType="map">
		DELETE FROM t_org_cost_record 
		<where>
			applyId=#{applyId} and orgId=#{orgId}
		</where>
	</delete>
	
	<update id="update" parameterType="map">
		UPDATE t_org_cost_record  
		<set>
			<if test="customerId != null">
				customerId = #{customerId, jdbcType=BIGINT,typeHandler=NumberHandler},  
			</if>
			<if test="orgId != null">
				orgId = #{orgId, jdbcType=BIGINT,typeHandler=NumberHandler},  
			</if>
			<if test="price != null">
				price = #{price, jdbcType=NUMERIC,typeHandler=NumberHandler},  
			</if>
			<if test="status != null">
				status = #{status, jdbcType=NUMERIC,typeHandler=NumberHandler},  
			</if>
			<if test="updateTime != null">
				updateTime = #{updateTime, jdbcType=TIMESTAMP,typeHandler=DateHandler}
			</if>
		</set>
		<where>
			  applyId=#{applyId} and orgId=#{orgId}
			 <if test="customerIdNull != null and customerIdNull != ''">
				and (customerId IS NULL OR customerId ='')
			</if>
		</where>
	</update>
	
	<select id="queryCostCount" resultType="int" parameterType="map">
		<![CDATA[SELECT
			COUNT(t.applyId)
		FROM
			t_org_cost_record t
		WHERE
			t.customerId = #{customerId}
		AND t.createTime >= #{recordDate}
		AND t.status = 1
		AND t.createTime < DATE_ADD(#{endRecordDate}, INTERVAL 1 DAY)]]>
	</select>
	
	<sql id="queryOrgCostSql">
		<where>
			<![CDATA[t.createTime>= #{startRecordDate} AND t.createTime<=#{endRecordDate}]]>
			<if test="orgId != null and orgId != ''">
				and t.orgId = #{orgId}
			</if>
			<if test="channelCode != null and channelCode != ''">
				and t.channelCode LIKE CONCAT(#{channelCode}, '%')
			</if>
			<if test="userOrgs != null and userOrgs != ''">
				and t.orgId in (${userOrgs})
			</if>
			<if test="fixChannels != ull and fixChannels != ''">
				and FIND_IN_SET(t.channelCode, #{fixChannels})
			</if>
			<if test="groupName != null and groupName != ''">
				and t2.groupName = #{groupName}
			</if>
			<if test="teamName != null and teamName != ''">
				and t2.teamName = #{teamName}
			</if>
			<if test="customerId != null and customerId != ''">
				and t.customerId = #{customerId}
			</if>
			<if test="realName != null and realName != ''">
				and t2.realName LIKE CONCAT(#{realName}, '%')
			</if>
		</where>
	</sql>
	
	<!-- 门店相关 -->
	<select id="queryOrgCost" parameterType="map" resultType="map">
		SELECT
			DATE_FORMAT( t.createTime, #{datePattern}) as 'recordDate',
			t1.orgName,
			t1.orgNo,
			t1.cityName,
			COUNT(IF(t.dataType=1 and t.`status` =1,t.applyId,NULL)) as 'apiNeedCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =1,t.price,NULL), 0)) as 'apiNeedCost',
			COUNT(IF(t.dataType=1 and t.`status` =0,t.applyId,NULL)) as 'apiNotCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =0,t.price,NULL), 0)) as 'apiNotCost',
			
			COUNT(IF(t.dataType=2 and t.`status` =1,t.applyId,NULL)) as 'flowNeedCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =1,t.price,NULL), 0)) as 'flowNeedCost',
			COUNT(IF(t.dataType=2 and t.`status` =0,t.applyId,NULL)) as 'flowNotCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =0,t.price,NULL), 0)) as 'flowNotCost',
			
			COUNT(IF(t.dataType=3 and t.`status` =1,t.applyId,NULL)) as 'historyNeedCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =1,t.price,NULL), 0)) as 'historyNeedCost',
			COUNT(IF(t.dataType=3 and t.`status` =0,t.applyId,NULL)) as 'historyNotCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =0,t.price,NULL), 0)) as 'historyNotCost',
			
			COUNT(IF(t.dataType=4 and t.`status` =1,t.applyId,NULL)) as 'otherNeedCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =1,t.price,NULL), 0)) as 'otherNeedCost',
			COUNT(IF(t.dataType=4 and t.`status` =0,t.applyId,NULL)) as 'otherNotCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =0,t.price,NULL), 0)) as 'otherNotCost'
		FROM
			t_org_cost_record t
			JOIN t_org t1 ON t.orgId = t1.orgId 
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t.orgId,DATE_FORMAT( t.createTime, #{datePattern})
		ORDER BY DATE_FORMAT( t.createTime, #{datePattern}) DESC
	</select>
	
	<select id="queryOrgCostCount" parameterType="map" resultType="int">
		SELECT COUNT(1) FROM (
			SELECT
				COUNT(1)
			FROM
			t_org_cost_record t
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t.orgId,DATE_FORMAT( t.createTime, #{datePattern})
		) tab1
	</select>
	
	
	<select id="queryOrgCostRange" parameterType="map" resultType="map">
		SELECT
			CONCAT_WS('至',#{startDateStr},#{endDateStr}) as 'recordDate',
			t1.orgName,
			t1.orgNo,
			t1.cityName,
			COUNT(IF(t.dataType=1 and t.`status` =1,t.applyId,NULL)) as 'apiNeedCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =1,t.price,NULL), 0)) as 'apiNeedCost',
			COUNT(IF(t.dataType=1 and t.`status` =0,t.applyId,NULL)) as 'apiNotCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =0,t.price,NULL), 0)) as 'apiNotCost',
			
			COUNT(IF(t.dataType=2 and t.`status` =1,t.applyId,NULL)) as 'flowNeedCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =1,t.price,NULL), 0)) as 'flowNeedCost',
			COUNT(IF(t.dataType=2 and t.`status` =0,t.applyId,NULL)) as 'flowNotCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =0,t.price,NULL), 0)) as 'flowNotCost',
			
			COUNT(IF(t.dataType=3 and t.`status` =1,t.applyId,NULL)) as 'historyNeedCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =1,t.price,NULL), 0)) as 'historyNeedCost',
			COUNT(IF(t.dataType=3 and t.`status` =0,t.applyId,NULL)) as 'historyNotCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =0,t.price,NULL), 0)) as 'historyNotCost',
			
			COUNT(IF(t.dataType=4 and t.`status` =1,t.applyId,NULL)) as 'otherNeedCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =1,t.price,NULL), 0)) as 'otherNeedCost',
			COUNT(IF(t.dataType=4 and t.`status` =0,t.applyId,NULL)) as 'otherNotCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =0,t.price,NULL), 0)) as 'otherNotCost'
		FROM
			t_org_cost_record t
			JOIN t_org t1 ON t.orgId = t1.orgId 
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t.orgId
	</select>
	
	<select id="queryOrgCostRangeCount" parameterType="map" resultType="int">
		SELECT COUNT(1) FROM (
			SELECT
				COUNT(1)
			FROM
			t_org_cost_record t
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t.orgId
		) tab1
	</select>
	
	
	<!-- 渠道相关 -->
	<select id="queryChannelCost" parameterType="map" resultType="map">
		SELECT
			DATE_FORMAT( t.createTime, #{datePattern}) as 'recordDate',
			t1.channelName,
			t1.channelCode,
			CASE t1.type
				WHEN 1 THEN '免费流量'
				WHEN 2 THEN '信息流'
				WHEN 3 THEN 'API接口'
				WHEN 4 THEN '历史数据'
				WHEN 5 THEN '贷超'
				WHEN 6 THEN '测试数据'
				ELSE '其他'
			END as 'typeText',
			COUNT(IF(t.dataType=1 and t.`status` =1,t.applyId,NULL)) as 'apiNeedCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =1,t.price,NULL), 0)) as 'apiNeedCost',
			COUNT(IF(t.dataType=1 and t.`status` =0,t.applyId,NULL)) as 'apiNotCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =0,t.price,NULL), 0)) as 'apiNotCost',
			COUNT(IF(t.dataType=2 and t.`status` =1,t.applyId,NULL)) as 'flowNeedCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =1,t.price,NULL), 0)) as 'flowNeedCost',
			COUNT(IF(t.dataType=2 and t.`status` =0,t.applyId,NULL)) as 'flowNotCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =0,t.price,NULL), 0)) as 'flowNotCost',
			COUNT(IF(t.dataType=3 and t.`status` =1,t.applyId,NULL)) as 'historyNeedCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =1,t.price,NULL), 0)) as 'historyNeedCost',
			COUNT(IF(t.dataType=3 and t.`status` =0,t.applyId,NULL)) as 'historyNotCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =0,t.price,NULL), 0)) as 'historyNotCost',
			COUNT(IF(t.dataType=4 and t.`status` =1,t.applyId,NULL)) as 'otherNeedCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =1,t.price,NULL), 0)) as 'otherNeedCost',
			COUNT(IF(t.dataType=4 and t.`status` =0,t.applyId,NULL)) as 'otherNotCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =0,t.price,NULL), 0)) as 'otherNotCost'
		FROM
			t_org_cost_record t
			JOIN t_borrow_channel t1 ON t.channelCode = t1.channelCode 
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t.channelCode,DATE_FORMAT( t.createTime, #{datePattern})
		ORDER BY DATE_FORMAT( t.createTime, #{datePattern}) DESC
	</select>
	
	<select id="queryChannelCostCount" parameterType="map" resultType="int">
		SELECT COUNT(1) FROM (
			SELECT
				COUNT(1)
			FROM
			t_org_cost_record t
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t.channelCode,DATE_FORMAT(t.createTime, #{datePattern})
		) tab1
	</select>
	
	
	<select id="queryChannelCostRange" parameterType="map" resultType="map">
		SELECT
			CONCAT_WS('至',#{startDateStr},#{endDateStr}) as 'recordDate',
			t1.channelName,
			t1.channelCode,
			CASE t1.type
				WHEN 1 THEN '免费流量'
				WHEN 2 THEN '信息流'
				WHEN 3 THEN 'API接口'
				WHEN 4 THEN '历史数据'
				WHEN 5 THEN '贷超'
				WHEN 6 THEN '测试数据'
				ELSE '其他'
			END as 'typeText',
			COUNT(IF(t.dataType=1 and t.`status` =1,t.applyId,NULL)) as 'apiNeedCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =1,t.price,NULL), 0)) as 'apiNeedCost',
			COUNT(IF(t.dataType=1 and t.`status` =0,t.applyId,NULL)) as 'apiNotCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =0,t.price,NULL), 0)) as 'apiNotCost',
			COUNT(IF(t.dataType=2 and t.`status` =1,t.applyId,NULL)) as 'flowNeedCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =1,t.price,NULL), 0)) as 'flowNeedCost',
			COUNT(IF(t.dataType=2 and t.`status` =0,t.applyId,NULL)) as 'flowNotCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =0,t.price,NULL), 0)) as 'flowNotCost',
			COUNT(IF(t.dataType=3 and t.`status` =1,t.applyId,NULL)) as 'historyNeedCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =1,t.price,NULL), 0)) as 'historyNeedCost',
			COUNT(IF(t.dataType=3 and t.`status` =0,t.applyId,NULL)) as 'historyNotCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =0,t.price,NULL), 0)) as 'historyNotCost',
			COUNT(IF(t.dataType=4 and t.`status` =1,t.applyId,NULL)) as 'otherNeedCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =1,t.price,NULL), 0)) as 'otherNeedCost',
			COUNT(IF(t.dataType=4 and t.`status` =0,t.applyId,NULL)) as 'otherNotCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =0,t.price,NULL), 0)) as 'otherNotCost'
		FROM
			t_org_cost_record t
			JOIN t_borrow_channel t1 ON t.channelCode = t1.channelCode 
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t.channelCode
	</select>
	
	<select id="queryChannelCostRangeCount" parameterType="map" resultType="int">
		SELECT COUNT(1) FROM (
			SELECT
				COUNT(1)
			FROM
			t_org_cost_record t
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t.channelCode
		) tab1
	</select>
	
	
	<!-- 门店人员相关 -->
	<select id="queryStoreCost" parameterType="map" resultType="map">
		SELECT
			DATE_FORMAT( t.createTime, #{datePattern}) as 'recordDate',
			t1.orgName,
			t1.orgNo,
			t2.realName,
			t1.cityName,
			COUNT(IF(t.dataType=1 and t.`status` =1,t.applyId,NULL)) as 'apiNeedCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =1,t.price,NULL), 0)) as 'apiNeedCost',
			COUNT(IF(t.dataType=1 and t.`status` =0,t.applyId,NULL)) as 'apiNotCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =0,t.price,NULL), 0)) as 'apiNotCost',
			COUNT(IF(t.dataType=2 and t.`status` =1,t.applyId,NULL)) as 'flowNeedCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =1,t.price,NULL), 0)) as 'flowNeedCost',
			COUNT(IF(t.dataType=2 and t.`status` =0,t.applyId,NULL)) as 'flowNotCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =0,t.price,NULL), 0)) as 'flowNotCost',
			COUNT(IF(t.dataType=3 and t.`status` =1,t.applyId,NULL)) as 'historyNeedCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =1,t.price,NULL), 0)) as 'historyNeedCost',
			COUNT(IF(t.dataType=3 and t.`status` =0,t.applyId,NULL)) as 'historyNotCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =0,t.price,NULL), 0)) as 'historyNotCost',
			COUNT(IF(t.dataType=4 and t.`status` =1,t.applyId,NULL)) as 'otherNeedCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =1,t.price,NULL), 0)) as 'otherNeedCost',
			COUNT(IF(t.dataType=4 and t.`status` =0,t.applyId,NULL)) as 'otherNotCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =0,t.price,NULL), 0)) as 'otherNotCost'
		FROM
			t_org_cost_record t
			JOIN t_org t1 ON t.orgId = t1.orgId
			JOIN t_busi_cust t2 ON t.customerId = t2.customerId 
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t2.customerId,DATE_FORMAT( t.createTime, #{datePattern})
		ORDER BY DATE_FORMAT( t.createTime, #{datePattern}) DESC
	</select>
	
	<select id="queryStoreCostCount" parameterType="map" resultType="int">
		SELECT COUNT(1) FROM (
			SELECT
				COUNT(1)
			FROM
			t_org_cost_record t
			JOIN t_org t1 ON t.orgId = t1.orgId
			JOIN t_busi_cust t2 ON t.customerId = t2.customerId
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t2.customerId,DATE_FORMAT(t.createTime, #{datePattern})
		) tab1
	</select>
	
	
	<select id="queryStoreCostRange" parameterType="map" resultType="map">
		SELECT
			CONCAT_WS('至',#{startDateStr},#{endDateStr}) as 'recordDate',
			t1.orgName,
			t1.orgNo,
			t2.realName,
			t1.cityName,
			COUNT(IF(t.dataType=1 and t.`status` =1,t.applyId,NULL)) as 'apiNeedCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =1,t.price,NULL), 0)) as 'apiNeedCost',
			COUNT(IF(t.dataType=1 and t.`status` =0,t.applyId,NULL)) as 'apiNotCount',
			SUM(IFNULL(IF(t.dataType=1 and t.`status` =0,t.price,NULL), 0)) as 'apiNotCost',
			COUNT(IF(t.dataType=2 and t.`status` =1,t.applyId,NULL)) as 'flowNeedCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =1,t.price,NULL), 0)) as 'flowNeedCost',
			COUNT(IF(t.dataType=2 and t.`status` =0,t.applyId,NULL)) as 'flowNotCount',
			SUM(IFNULL(IF(t.dataType=2 and t.`status` =0,t.price,NULL), 0)) as 'flowNotCost',
			COUNT(IF(t.dataType=3 and t.`status` =1,t.applyId,NULL)) as 'historyNeedCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =1,t.price,NULL), 0)) as 'historyNeedCost',
			COUNT(IF(t.dataType=3 and t.`status` =0,t.applyId,NULL)) as 'historyNotCount',
			SUM(IFNULL(IF(t.dataType=3 and t.`status` =0,t.price,NULL), 0)) as 'historyNotCost',
			COUNT(IF(t.dataType=4 and t.`status` =1,t.applyId,NULL)) as 'otherNeedCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =1,t.price,NULL), 0)) as 'otherNeedCost',
			COUNT(IF(t.dataType=4 and t.`status` =0,t.applyId,NULL)) as 'otherNotCount',
			SUM(IFNULL(IF(t.dataType=4 and t.`status` =0,t.price,NULL), 0)) as 'otherNotCost'
		FROM
			t_org_cost_record t
			JOIN t_org t1 ON t.orgId = t1.orgId
			JOIN t_busi_cust t2 ON t.customerId = t2.customerId
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t2.customerId
	</select>
	
	<select id="queryStoreCostRangeCount" parameterType="map" resultType="int">
		SELECT COUNT(1) FROM (
			SELECT
				COUNT(1)
			FROM
			t_org_cost_record t
			JOIN t_org t1 ON t.orgId = t1.orgId
			JOIN t_busi_cust t2 ON t.customerId = t2.customerId
		<include refid="queryOrgCostSql"></include>
		GROUP BY
			t2.customerId
		) tab1
	</select>
</mapper>