package org.xxjr.busi.util;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.core.service.RemoteInvoke;
import org.llw.model.cache.RedisUtils;
import org.xxjr.sys.util.ServiceKey;

public class RecruitCustUtils {

	/** 门店信息缓存  **/
	public final static String RECRUIT_CUST = "recruit_cust";
	
	/***
	 * 获取招聘用户信息
	 */
	@SuppressWarnings("unchecked")
	public static Map<String,Object> getRecruitCust(String custId){
		Map<String,Object> map = ((Map<String, Object>) RedisUtils.getRedisService().get(RECRUIT_CUST+custId));
		if(map==null || map.isEmpty()){
			map = refershRecruitCust(custId);
		}
		return map;
	}
	
	/***
	 * 刷新招聘用户信息
	 */
	public static Map<String,Object> refershRecruitCust(String custId){
		AppParam param  = new AppParam();
		param.setService("recruitCustService");
		param.setMethod("query");
		param.setRmiServiceName(AppProperties
				.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_zx));
		param.addAttr("customerId", custId);
		AppResult result = RemoteInvoke.getInstance().callNoTx(param);
		if(result.getRows().size() > 0){
			RedisUtils.getRedisService().set(RECRUIT_CUST+custId, (Serializable)result.getRow(0), 60*60*4);
			return result.getRow(0);
		}
		return new HashMap<String,Object>();
	}

}
