package org.xxjr.mq.listener.receiver;

import java.util.Map;

import javax.annotation.PreDestroy;

import org.ddq.active.mq.XxjrMqSendUtil;
import org.ddq.common.util.LogerUtil;
import org.llw.ddq.mq.rabbitmq.RabbitMqConfig;
import org.llw.xxjr.busi.util.borrow.AutoRobUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;
import org.xxjr.mq.listener.consumer.RabbitMqConsumer;
import org.xxjr.mq.listener.util.XxjrInitAnnotation;

@Component
@XxjrInitAnnotation(beanName="xdjlAutoRobReceiver",initMethod="init")
public class XdjlAutoRobReceiver extends RabbitMqConsumer {
	
	@Autowired
	private RabbitMqConfig rabbitMqConfig;
	
	@Value("${rabbit.queue.xdjlAutoRob}")
	private String queueName;

	public void onMessage(Map<String, Object> param) {
		try {
			LogerUtil.log(XdjlAutoRobReceiver.class,"XdjlAutoRobReceiver params:" + param.toString());
			Object borrowId = param.get("borrowId");
			if (!StringUtils.isEmpty(borrowId)) {
				AutoRobUtil.autoRobBorrow(borrowId);
			}
		} catch (Exception e) {
			LogerUtil.error(XdjlAutoRobReceiver.class, e, "XdjlAutoRobReceiver reward params:" + param.toString());
			XxjrMqSendUtil.saveFailureLog("XdjlAutoRobReceiver", param);
		}
	}
	
	@Override
	public void init(String queueName ,RabbitMqConfig rabbitMqConfig) {
		super.init(queueName,rabbitMqConfig);
	}
	
    public void init() {
		init(queueName,rabbitMqConfig);
	}
	
	@PreDestroy
	public void destroy(){
		reaseResource();
	}
	
}
