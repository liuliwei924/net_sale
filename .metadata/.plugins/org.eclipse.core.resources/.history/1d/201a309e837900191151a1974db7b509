package org.xxjr.job.listener.crm;

import java.util.Date;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.util.DateUtil;
import org.ddq.common.util.LogerUtil;
import org.llw.ddq.job.core.BaseExecteJob;
import org.llw.ddq.job.util.JobConstant;
import org.llw.ddq.job.util.JobUtil;
import org.ddq.common.core.service.RemoteInvoke;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;
import org.xxjr.sys.util.ServiceKey;
import org.xxjr.sys.util.SysParamsUtil;

/**
 * 提前20天自动生成账单还款计划，每天执行一次
 * @author Administrator
 *
 */
@Lazy
@Component
public class AutoGenerateBillPlanJob implements BaseExecteJob {

	@Override
	public AppResult executeJob(AppParam param) {
		LogerUtil.debug("AutoAddVipRefundJob start");
		
		Object processId = param.getAttr(JobConstant.KEY_processId);
		
		//将未按时还款计划的还款状态改为逾期
		setOverdue(processId);
		
		// 查客户填写的 未结清 账单 且repayPeriod 不为0
		AppResult result = new AppResult();
		int size = 0;
		try {
			AppParam params = new AppParam();
			params.setService("daiRepayPlanService");
			params.setMethod("generateNextPlan");
			params.addAttr("curDate", DateUtil.toStringByParttern(new Date(), DateUtil.DATE_PATTERN_YYYY_MM_DD));
			params.addAttr("aheadDays", SysParamsUtil.getIntParamByKey("repay_aheadDays", 20));
			params.setRmiServiceName(AppProperties.
					getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_crmsys));
			
			AppResult upadteResult = RemoteInvoke.getInstance().call(params);
			size = Integer.valueOf(upadteResult.getAttr(DuoduoConstant.DAO_Insert_SIZE).toString());
		} catch (Exception e) {
			LogerUtil.error(AutoGenerateBillPlanJob.class, e, "AutoGenerateBillJob error!");
			JobUtil.addProcessExecute(processId, "自动生成账单下期还款计划失败:" + e.getMessage());
		}
		LogerUtil.debug("AutoGenerateBillJob over");
		result.setMessage("自动生成账单下期还款计划成功！共生成了" + size + "条记录");
		return result;
	}
	
	/**
	 * 将未按时还款计划的还款状态改为逾期
	 * @return
	 */
	public AppResult setOverdue(Object processId){
		AppResult result = new AppResult();
		int size = 0;
		try {	
			AppParam param = new AppParam("daiRepayPlanService", "setOverdue");
			param.setRmiServiceName(AppProperties.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_crmsys));
			result = RemoteInvoke.getInstance().call(param);
			size = (Integer)result.getAttr(DuoduoConstant.DAO_Update_SIZE);
		} catch (Exception e) {
			LogerUtil.error(AutoGenerateBillPlanJob.class, e, "setOverdue error!");
			JobUtil.addProcessExecute(processId, "设置还款状态失败:" + e.getMessage());
		}
		LogerUtil.debug("AutoGenerateBillJob setOverdue over");
		result.setMessage("设置还款状态成功！共更新了" + size + "条记录");
		return result;
	}

}

