package org.xxjr.job.listener.cust;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.util.LogerUtil;
import org.llw.ddq.job.core.BaseExecteJob;
import org.llw.ddq.job.util.JobConstant;
import org.llw.ddq.job.util.JobUtil;
import org.ddq.common.core.service.RemoteInvoke;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;
import org.xxjr.sys.util.ServiceKey;

/**
 * 每天定时添加有效会员抽奖次数
 * 
 * @author Rudolf
 * @date   2017年2月28日---下午2:54:23
 * @problem
 * @answer
 */
@Lazy
@Component
public class AutoResetVipCount implements BaseExecteJob {

	@Override
	public AppResult executeJob(AppParam param) {
		Object processId = param.getAttr(JobConstant.KEY_processId);
		AppResult result = new AppResult();
		
		// 更新优惠券状态的定时任务
		//CouponJobUtil.updateCouponStatus(processId);
		
		try {
			// 重置免费次数
			AppParam params = new AppParam();
			params.setService("vipFreeService");
			params.setMethod("resetFreeCount");
			params.setRmiServiceName(AppProperties.
					getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_cust));
			
			RemoteInvoke.getInstance().call(params);
			
			// 自定义筛选条件只保留一天
			AppParam condParam = new AppParam();
			condParam.setService("conditionRuleService");
			condParam.setMethod("clearConditionData");
			condParam.setRmiServiceName(AppProperties.
					getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_busi));
			RemoteInvoke.getInstance().call(condParam);
		} catch (Exception e) {
			LogerUtil.error(AutoResetVipCount.class, e, "AutoResetVipCount error!");
			JobUtil.addProcessExecute(processId, "chon失败:" + e.getMessage());
		}
		
		LogerUtil.debug("AutoResetVipCount over");
		result.setMessage("添加会员特权成功！");
		return result;
	}

}

