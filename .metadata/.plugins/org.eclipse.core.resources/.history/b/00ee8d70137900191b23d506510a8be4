package org.xxjr.store.web.action.account.fx;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.exception.ExceptionUtil;
import org.ddq.common.util.LogerUtil;
import org.ddq.common.web.session.DuoduoSession;
import org.ddq.common.web.session.RequestUtil;
import org.llw.model.cache.RedisUtils;
import org.ddq.zk.service.RemoteInvoke;
import org.springframework.stereotype.Controller;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.xxjr.busi.util.store.StoreUserUtil;
import org.xxjr.cust.util.info.CustomerIdentify;
import org.xxjr.fx.util.FxProdUtil;
import org.xxjr.fx.util.FxPyqTgUtil;
import org.xxjr.sys.util.ServiceKey;

/**
 * 分销朋友圈海报配置相关
 * @author Administrator
 *
 */
@Controller()
@RequestMapping("/account/fx/")
public class FxPyqPosterAction {

	/**
	 * 查询推广海报大类列表
	 * @param request
	 * @return
	 */
	@RequestMapping("fxPyqPoster/queryTgList")
	@ResponseBody
	public AppResult queryTgList(HttpServletRequest request) {
		AppResult result = new AppResult();
		try {
			AppParam params = new AppParam();
			RequestUtil.setAttr(params, request);
			params.setService("fxPyqTgService");
			params.setMethod("queryByPage");
			params.setOrderBy("tgId,tgDate");
			params.setOrderValue("DESC");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_sho));
			result = RemoteInvoke.getInstance().callNoTx(params);
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "queryTgList error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
	
	
	/**
	 * 添加推广海报大类信息
	 * @param request
	 * @return
	 */
	@RequestMapping("fxPyqPoster/addTgPosterInfo")
	@ResponseBody
	public AppResult addTgPosterInfo(HttpServletRequest request) {
		AppResult result = new AppResult();
		try {
			AppParam params = new AppParam();
			RequestUtil.setAttr(params, request);
			params.setService("fxPyqTgService");
			params.setMethod("insert");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_sho));
			result = RemoteInvoke.getInstance().call(params);
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "addTgPosterInfo error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
	
	
	/**
	 * 编辑推广海报大类信息
	 * @param request
	 * @return
	 */
	@RequestMapping("fxPyqPoster/updateTgPosterInfo")
	@ResponseBody
	public AppResult updateTgPosterInfo(HttpServletRequest request) {
		AppResult result = new AppResult();
		try {
			AppParam params = new AppParam();
			RequestUtil.setAttr(params, request);
			params.setService("fxPyqTgService");
			params.setMethod("update");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_sho));
			result = RemoteInvoke.getInstance().call(params);
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "updateTgPosterInfo error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
	
	
	/**
	 * 查询推广海报详情列表
	 * @param request
	 * @return
	 */
	@RequestMapping("fxPyqPoster/queryPostCfgList")
	@ResponseBody
	public AppResult queryCfgList(HttpServletRequest request) {
		AppResult result = new AppResult();
		try {
			AppParam params = new AppParam();
			RequestUtil.setAttr(params, request);
			params.setService("fxPyqConfigService");
			params.setMethod("queryPyqPostList");
			params.setOrderBy("createTime");
			params.setOrderValue("Desc");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_sho));
			result = RemoteInvoke.getInstance().callNoTx(params);
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "queryCfgList error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
	
	
	/**
	 * 添加推广海报详情信息
	 * @param request
	 * @return
	 */
	@RequestMapping("fxPyqPoster/addPostCfgInfo")
	@ResponseBody
	public AppResult addPostCfgInfo(HttpServletRequest request) {
		AppResult result = new AppResult();
		try {
			String tgId = request.getParameter("tgId");
			if (StringUtils.isEmpty(tgId)) {
				result.setSuccess(false);
				result.setMessage("海报类型不能为空");
				return result;
			}
			int totalCount = FxPyqTgUtil.queryPyqTgCount(tgId,null);
			if(totalCount >= 9){
				result.setSuccess(false);
				result.setMessage("此海报类型的图片已达到九张，不能再添加图片");
				return result;
			}
			String effectImg = request.getParameter("effectImg");
			if (StringUtils.isEmpty(effectImg)) {
				result.setSuccess(false);
				result.setMessage("效果图不能为空");
				return result;
			}
			String qrcodeType = request.getParameter("qrcodeType");
			if("2".equals(qrcodeType)){
				String prodId = request.getParameter("prodId");
				if (StringUtils.isEmpty(prodId)) {
					result.setSuccess(false);
					result.setMessage("产品名称不能为空");
					return result;
				}
			}
			AppParam params = new AppParam();
			RequestUtil.setAttr(params, request);
			String customerId = StoreUserUtil.getCustomerId(request);
			//获取用户信息
			Map<String, Object> custInfo = CustomerIdentify.getCustIdentify(customerId);
			if(custInfo != null){
				params.addAttr("createBy", custInfo.get("realName"));
			}
			params.setService("fxPyqConfigService");
			params.setMethod("insert");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_sho));
			result = RemoteInvoke.getInstance().call(params);
			if(result.isSuccess()){
				RedisUtils.getRedisService().del(FxPyqTgUtil.KEY_PYQ_POSTER_CONFIGS);
			}
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "addPostCfgInfo error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
	
	
	/**
	 * 编辑推广海报详情信息
	 * @param request
	 * @return
	 */
	@RequestMapping("fxPyqPoster/updatePostCfg")
	@ResponseBody
	public AppResult updatePostCfg(HttpServletRequest request) {
		AppResult result = new AppResult();
		try {
			String configId = request.getParameter("configId");
			if (StringUtils.isEmpty(configId)) {
				result.setSuccess(false);
				result.setMessage("海报小类Id不能为空");
				return result;
			}
			String tgId = request.getParameter("tgId");
			if (StringUtils.isEmpty(tgId)) {
				result.setSuccess(false);
				result.setMessage("海报类型不能为空");
				return result;
			}
			int totalCount = FxPyqTgUtil.queryPyqTgCount(tgId,configId);
			if(totalCount >= 9){
				result.setSuccess(false);
				result.setMessage("此海报类型的图片已达到九张，不能再添加图片");
				return result;
			}
			String effectImg = request.getParameter("effectImg");
			if (StringUtils.isEmpty(effectImg)) {
				result.setSuccess(false);
				result.setMessage("效果图不能为空");
				return result;
			}
			AppParam params = new AppParam();
			RequestUtil.setAttr(params, request);
			String customerId = StoreUserUtil.getCustomerId(request);
			//获取用户信息
			Map<String, Object> custInfo = CustomerIdentify.getCustIdentify(customerId);
			if(custInfo != null){
				params.addAttr("updateBy", custInfo.get("realName"));
			}
			String qrcodeType = request.getParameter("qrcodeType");
			if("2".equals(qrcodeType)){
				String prodId = request.getParameter("prodId");
				if (StringUtils.isEmpty(prodId)) {
					result.setSuccess(false);
					result.setMessage("产品名称不能为空");
					return result;
				}
			}
			params.setService("fxPyqConfigService");
			params.setMethod("update");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_sho));
			result = RemoteInvoke.getInstance().call(params);
			if(result.isSuccess()){
				RedisUtils.getRedisService().del(FxPyqTgUtil.KEY_PYQ_POSTER_CONFIGS);
			}
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "updatePostCfg error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
	
	
	/**
	 * 查询推广海报大类信息
	 * @param request
	 * @return
	 */
	@RequestMapping("fxPyqPoster/queryTgPosterList")
	@ResponseBody
	public AppResult queryTgPosterList(HttpServletRequest request) {
		AppResult result = new AppResult();
		try {
			AppParam params = new AppParam();
			RequestUtil.setAttr(params, request);
			params.setService("fxPyqTgService");
			params.setMethod("query");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_sho));
			result = RemoteInvoke.getInstance().callNoTx(params);
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "queryTgPosterList error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
	
	/**
	 * 查询所有产品信息
	 */
	@RequestMapping("fxPyqPoster/queryProdList")
	@ResponseBody
	public AppResult queryProdList(HttpServletRequest request) {
		AppResult result = new AppResult();
		try {
			// 查询所有产品信息
			List<Map<String, Object>> prodList = FxProdUtil.getFxProdList(null);
			result.putAttr("prodList", prodList);
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "queryProdList error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
	
}
