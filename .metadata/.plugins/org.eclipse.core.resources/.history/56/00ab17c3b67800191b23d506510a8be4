package org.xxjr.busi.util.push.impl;

import java.util.Date;
import java.util.Map;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.security.md5.Md5;
import org.ddq.common.util.DateUtil;
import org.ddq.common.util.LogerUtil;
import org.ddq.common.util.StringUtil;
import org.ddq.zk.service.RemoteInvoke;
import org.xxjr.busi.util.borrow.IdCardResolveUtil;
import org.xxjr.busi.util.push.PushCode;
import org.xxjr.busi.util.push.PushPlatformUtils;
import org.xxjr.busi.util.push.PushUtil;
import org.xxjr.sys.util.NumberUtil;
import org.xxjr.sys.util.ServiceKey;
import org.xxjr.sys.util.SysParamsUtil;

import com.alibaba.fastjson.JSONObject;
@PushCode(22)
public class PushLiInsureUtil implements PushUtil{

	@Override
	public int pushData(Map<String, Object> row, Integer pushType) {
		int status = 2;
		Map<String, Object> config = PushPlatformUtils.getConfigByCode(pushType);
		try {
			if ((!PushPlatformUtils.checkChannelOpen(config))) {
				LogerUtil.log(PushLiInsureUtil.class, config.get("pushName") + "推送未打开");
				return 3;
			}
			if ((!PushPlatformUtils.checkChannelMaxCount(config))) {
				LogerUtil.log(PushLiInsureUtil.class, config.get("pushName") + "推送已达上限");
				return 3;
			}
			if ((!PushPlatformUtils.getInsureCondition(row, config))) {
				LogerUtil.log(PushLiInsureUtil.class, config.get("pushName") + "筛选条件无法通过");
				return 4;
			}
			String url = SysParamsUtil.getStringParamByKey("push_LiInsure_cfg_url", "http://120.78.241.111/api/insure/direct/receiver");
			String json = sendData(row);
			String msg = "";
			Map<String, Object> resMap = PushPlatformUtils.httpPost(url, null, json, true, null);
			if ("0".equals(StringUtil.objectToStr(resMap.get("err")))) {
				status = 1;
			}
			msg = StringUtil.objectToStr(resMap.get("msg"));
			AppParam updateParam = new AppParam("insurancePushPoolService", "updateStatus");
			updateParam.setRmiServiceName(AppProperties.getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_busi_in));
			updateParam.addAttrs(row);
			updateParam.addAttr("pushType", pushType);
			updateParam.addAttr("message", msg);
			updateParam.addAttr("status", status);
			RemoteInvoke.getInstance().call(updateParam);
			LogerUtil.log(config.get("pushName") + "推送数据任务 PushLiInsureUtil end");
		} catch (Exception e) {
			LogerUtil.error(PushFSInsureUtil.class, e, "PushLiInsureUtil >>>>>>>>>>>>>>>>>>error");
		}
		return status;
	}

	private static String sendData(Map<String, Object> row) {
		JSONObject connParam = new JSONObject();
		String channelNo = SysParamsUtil.getStringParamByKey("push_LiInsure_cfg_channelNo", "1230001");
		String key = SysParamsUtil.getStringParamByKey("push_LiInsure_cfg_key", "xiaoxiaojinrong");
		connParam.put("channelNo", channelNo);
		String applyName = StringUtil.objectToStr(row.get("applyName"));
		connParam.put("name", applyName);
		String telephone = StringUtil.objectToStr(row.get("telephone"));
		connParam.put("mobile", telephone);
		connParam.put("sex", NumberUtil.getInt(row.get("sex"), 1) == 1 ? "M" : "F");
		String identifyNo = StringUtil.getString(row.get("identifyNo"));
		String birthday = IdCardResolveUtil.getBirthday(identifyNo);
		int age = NumberUtil.getInt(row.get("age"), -1);
		birthday = PushPlatformUtils.getBirthDay(birthday, age);
		connParam.put("birth", birthday);
		connParam.put("ip", StringUtil.objectToStr(row.get("applyIp")));
		connParam.put("userAgent", StringUtil.objectToStr(row.get("userAgent")));
		String cityName = StringUtil.objectToStr(row.get("cityName"));
		if (cityName.endsWith("市")) {
			cityName = cityName.substring(0, (cityName.length()-1));
		}
		connParam.put("city", cityName);
		String applyTime = DateUtil.toStringByParttern(new Date(), DateUtil.DATE_PATTERN_YYYY_MM_DD_HHMMSS);
		connParam.put("sign", Md5.getInstance().encrypt((channelNo+applyName+telephone+applyTime+key)));
		connParam.put("applyTime", applyTime);
		return connParam.toJSONString();
	}
}
