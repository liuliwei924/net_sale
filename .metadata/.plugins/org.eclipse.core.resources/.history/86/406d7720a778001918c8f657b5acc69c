package org.ddq.common.core.service;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.net.ConnectException;
import java.nio.charset.Charset;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.core.SpringAppContext;
import org.ddq.common.core.service.SoaManager;
import org.ddq.common.core.service.TxType;
import org.ddq.common.web.session.DuoduoSession;
import org.ddq.zk.api.IAppRemote;
import org.ddq.zk.manage.ServerManager;
import org.ddq.zk.util.ZKUitl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;

import lombok.extern.slf4j.Slf4j;


@Component
@Slf4j
public class RemoteInvoke {
	
	private final ThreadLocal<String> retryCount = new ThreadLocal<String>();
	
	public static RemoteInvoke getInstance(){
		return SpringAppContext.getBean(RemoteInvoke.class);
	}
	
	
	/***
	 * 调用 事务处理
	 * 
	 * @param params
	 * @return
	 * @throws Exception
	 */
	public AppResult call(final AppParam params) {
		//return invoke(params, TxType.DEF_TX);
		params.setDataBase(params.getRmiServiceName() + "_");
		return SoaManager.getInstance().invoke(params);
	}

	/***
	 * 不调用事务处理
	 * 
	 * @param params
	 * @return
	 * @throws Exception
	 */
	public AppResult callNoTx(final AppParam params) {
		//return invoke(params, TxType.NO_TX);
		params.setDataBase(params.getRmiServiceName() + "_");
		return SoaManager.getInstance().callNoTx(params);
	}

	/***
	 * 远程调用处理
	 * @param params
	 * @param txType
	 * @return
	 */
	private AppResult invoke(final AppParam params, final TxType txType) {
		return SoaManager.getInstance().invoke(params);
	}


}
