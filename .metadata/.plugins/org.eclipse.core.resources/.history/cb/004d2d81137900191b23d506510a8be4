package org.xxjr.store.web.action.account.wz;

import javax.servlet.http.HttpServletRequest;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.exception.ExceptionUtil;
import org.ddq.common.util.LogerUtil;
import org.ddq.common.web.session.DuoduoSession;
import org.ddq.common.web.session.RequestUtil;
import org.llw.model.cache.RedisUtils;
import org.ddq.zk.service.RemoteInvoke;
import org.springframework.stereotype.Controller;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.xxjr.cust.util.wz.WzCustomerUtil;
import org.xxjr.sys.util.ServiceKey;

/**
 * 微名片海报配置
 * @author Administrator
 *
 */
@Controller()
@RequestMapping("/account/wz/wzPostConf/")
public class WzCardPosterConfigAction {
	
	/**
	 * 查询微名片海报配置
	 * @param request
	 * @return
	 */
	@RequestMapping("queryPosterConf")
	@ResponseBody
	public AppResult queryPosterConf(HttpServletRequest request){
		AppResult result = new AppResult();
		try {
			AppParam params = new AppParam();
			RequestUtil.setAttr(params, request);
			params.setService("wzCardPosterConfigService");
			params.setMethod("queryByPage");
			params.setOrderBy("createTime");
			params.setOrderValue("desc");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_zx));
			result = RemoteInvoke.getInstance().callNoTx(params);
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "queryPosterConf error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}

	/**
	 * 新增微名片海报配置
	 * @param request
	 * @return
	 */
	@RequestMapping("addPosterConf")
	@ResponseBody
	public AppResult addPosterConf(HttpServletRequest request){
		AppResult result = new AppResult();
		try {
			AppParam params = new AppParam();
			RequestUtil.setAttr(params, request);
			params.setService("wzCardPosterConfigService");
			params.setMethod("insert");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_zx));
			result = RemoteInvoke.getInstance().call(params);
			if(result.isSuccess()){
				RedisUtils.getRedisService().del(WzCustomerUtil.WZ_CARD_POSTER_CONFIG);
			}
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "addPosterConf error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
	
	/**
	 * 删除微名片海报配置
	 * @param request
	 * @return
	 */
	@RequestMapping("deletePosterConf")
	@ResponseBody
	public AppResult deletePosterConf(HttpServletRequest request){
		AppResult result = new AppResult();
		String configId = request.getParameter("configId");
		if (StringUtils.isEmpty(configId)) {
			result.setSuccess(false);
			result.setMessage("海报ID不能为空");
			return result;
		}
		try {
			AppParam params = new AppParam();
			RequestUtil.setAttr(params, request);
			params.setService("wzCardPosterConfigService");
			params.setMethod("delete");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_zx));
			result = RemoteInvoke.getInstance().call(params);
			if(result.isSuccess()){
				RedisUtils.getRedisService().del(WzCustomerUtil.WZ_CARD_POSTER_CONFIG);
			}
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "deletePosterConf error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
	
	/**
	 * 更新微名片海报配置
	 * @param request
	 * @return
	 */
	@RequestMapping("updatePosterConf")
	@ResponseBody
	public AppResult updatePosterConf(HttpServletRequest request){
		AppResult result = new AppResult();
		String configId = request.getParameter("configId");
		if (StringUtils.isEmpty(configId)) {
			result.setSuccess(false);
			result.setMessage("海报ID不能为空");
			return result;
		}
		try {
			AppParam params = new AppParam();
			RequestUtil.setAttr(params, request);
			params.setService("wzCardPosterConfigService");
			params.setMethod("update");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_zx));
			result = RemoteInvoke.getInstance().call(params);
			if(result.isSuccess()){
				RedisUtils.getRedisService().del(WzCustomerUtil.WZ_CARD_POSTER_CONFIG);
			}
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "updatePosterConf error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
}
