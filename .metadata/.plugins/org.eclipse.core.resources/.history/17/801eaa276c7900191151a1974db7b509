package org.xxjr.job.listener.xxxj;

import java.util.Map;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.util.LogerUtil;
import org.llw.ddq.job.util.JobUtil;
import org.ddq.common.core.service.RemoteInvoke;
import org.xxjr.sys.util.ServiceKey;

/**
 * 
 * @author LHS
 *
 */
public class XjPushDataUtil {
	
	/**
	 * 推送数据
	 * @return
	 */
	public static AppResult pushData(Object processId){
		AppResult result = new AppResult();
		try{
			AppParam param = new AppParam("xjCustInfoService","queryPushData");
			param.addAttr("pushStatus", "0");
			param.addAttr("insuranceFlag", 1);
			param.setRmiServiceName(AppProperties
						.getProperties(DuoduoConstant.RMI_SERVICE_START
								+ ServiceKey.Key_XJ));
			result = RemoteInvoke.getInstance().call(param);
			
			AppParam pushParam = new AppParam("pushdataPoolService","insert");
			pushParam.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START
							+ ServiceKey.Key_busi_in));
			
			AppParam updateParam = new AppParam("xjCustInfoService","update");
			updateParam.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START
							+ ServiceKey.Key_XJ));
			
			for (Map<String, Object> map : result.getRows()) {
				pushParam.clearAttr();
				pushParam.addAttrs(map);
				pushParam.addAttr("sourceType", 2);//来源小小星舰
				result = RemoteInvoke.getInstance().call(pushParam);
				if (result.isSuccess()) {
					updateParam.addAttr("customerId", map.get("customerId"));
					updateParam.addAttr("pushStatus", 1);
					RemoteInvoke.getInstance().call(updateParam);
				}
			}
		} catch(Exception e){
			LogerUtil.error(XjPushDataUtil.class,e, "pushData error");
			JobUtil.addProcessExecute(processId, "XjPushDataUtil pushData 报错：" + e.getMessage() );
		}
		return result;
	}
}
