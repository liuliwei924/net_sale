package org.xxjr.cust.invite;

import java.util.Date;
import java.util.Map;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppResult;
import org.ddq.common.core.service.BaseService;
import org.ddq.common.core.service.SoaManager;
import org.ddq.common.exception.AppException;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;
import org.xxjr.fx.util.FxConstant;
import org.ddq.common.exception.DuoduoError;

@Lazy
@Service
public class CustFansApplyService extends BaseService {
	private static final String NAMESPACE = "CUSTFANSAPPLY";

	/**
	 * querys
	 * @param params
	 * @return
	 */
	public AppResult query(AppParam params) {
		return super.query(params, NAMESPACE);
	}
	
	/**
	 * queryByPage
	 * @param params
	 * @return
	 */
	public AppResult queryByPage(AppParam params) {
		return super.queryByPage(params, NAMESPACE);
	}
	
	/**
	 * queryCount
	 * @param params
	 * @return
	 */
	public AppResult queryCount(AppParam params) {
		int size = getDao().count(NAMESPACE, super.COUNT,params.getAttr(),params.getDataBase());
		AppResult result = new AppResult();
		result.putAttr(DuoduoConstant.TOTAL_SIZE, size);
		return result;
	}
	
	
	/**
	 * insert
	 * @param params
	 * @return
	 */
	public AppResult insert(AppParam params) {
		params.addAttr("applyTime", new Date());
		return super.insert(params, NAMESPACE);
	}
	
	/**
	 * update
	 * @param params
	 * @return
	 */
	public AppResult update(AppParam params) {
		return super.update(params, NAMESPACE);
	}
	
	/**
	 * delete
	 * @param params
	 * @return
	 */
	public AppResult delete(AppParam params) {
		String ids = (String) params.getAttr("ids");
		AppResult  result = null;
		if (!StringUtils.isEmpty(ids)) {
			for (String id : ids.split(",")) {
				AppParam param = new AppParam();
				param.addAttr("applyId", id);
				
				result = super.delete(param, NAMESPACE);
			}
		} else if (!StringUtils.isEmpty(params.getAttr("applyId"))) {
			result = super.delete(params, NAMESPACE);
		} else {
			throw new AppException(DuoduoError.DELETE_NO_ID);
		}
		return result;
	}
	
	
	/**
	 * 更新申请记录信息
	 * @param params
	 * @return
	 */
	public AppResult updateApply(AppParam params) {
		AppResult result = new AppResult();
		int size = this.getDao().update(NAMESPACE, "updateApplyInfo", params.getAttr(), params.getDataBase());
		result.putAttr(DuoduoConstant.DAO_Update_SIZE, size);
		return result;
	}
	
	
	/**
	 * 保存分销信用卡用户申请记录
	 * @param params
	 * @return
	 */
	public AppResult saveApply(AppParam params) {
		AppResult result = new AppResult();
		AppParam wxFansParam = new AppParam("custWxFansService","query");
		wxFansParam.addAttr("openid", params.getAttr("fxOpenid"));
		wxFansParam.addAttr("gzhId", params.getAttr("gzhId"));
		AppResult wxFansResult = SoaManager.getInstance().invoke(wxFansParam);
		if(wxFansResult.getRows().size() > 0){
			Map<String,Object> wxFansInfo = wxFansResult.getRow(0);
			AppParam fansParam = new AppParam();
			fansParam.addAttr("customerId", wxFansInfo.get("customerId"));
			fansParam.addAttr("fansId", wxFansInfo.get("fansId"));
			fansParam.addAttr("fxApplyId", params.getAttr("fxApplyId"));// 申请数据id
			fansParam.addAttr("prodName", params.getAttr("prodName"));// 产品名称
			fansParam.addAttr("status", FxConstant.FX_APPLY_1);
			this.insert(fansParam);
		}
		return result;
	}
	
}
