package org.xxjr.job.listener.wx;

import java.util.Date;
import java.util.Map;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.util.DateUtil;
import org.ddq.common.util.LogerUtil;
import org.llw.ddq.job.core.BaseExecteJob;
import org.llw.ddq.job.util.JobConstant;
import org.llw.ddq.job.util.JobUtil;
import org.ddq.common.core.service.RemoteInvoke;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;
import org.xxjr.sys.util.ServiceKey;

/**
 * 二维码统计
 * @author Administrator
 *
 */
@Lazy
@Component
public class QrcodeStatJob implements BaseExecteJob {

	@Override
	public AppResult executeJob(AppParam param) {
		AppResult result = new AppResult();
		Object processId = param.getAttr(JobConstant.KEY_processId);
		
		LogerUtil.debug("start QrcodeStatService");
		// 公众号信息
		AppParam gzhParam = new AppParam();
		gzhParam.setService("gzhInfoService");
		gzhParam.setMethod("query");
		gzhParam.addAttr("type", "1");
		gzhParam.addAttr("enable", "1");
		gzhParam.setRmiServiceName(AppProperties.
				getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_wx));
		AppResult gzhResult = RemoteInvoke.getInstance().call(gzhParam);
		String today = DateUtil.toStringByParttern(new Date(),
				DateUtil.DATE_PATTERN_YYYY_MM_DD);
		for(Map<String,Object> gzhInfo : gzhResult.getRows()){
			// 统计海报
			Object gzhId = gzhInfo.get("gzhId");
			AppParam posterParam = new AppParam();
			posterParam.addAttr("recordDate", today);
			posterParam.addAttr("gzhId", gzhId);
			posterParam.setService("qrcodeSumCountService");
			posterParam.setMethod("posterStat");
			posterParam.setRmiServiceName(AppProperties.
					getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_wx));
			try {
				RemoteInvoke.getInstance().call(posterParam);
			} catch (Exception e) {
				LogerUtil.error(QrcodeStatJob.class, e, "posterStat error");
				result.setMessage(e.getMessage());
			}
			
			// 统计二维码
			AppParam qrcodeParam = new AppParam();
			qrcodeParam.addAttr("recordDate", today);
			qrcodeParam.addAttr("gzhId", gzhId);
			qrcodeParam.setService("qrcodeSumCountService");
			qrcodeParam.setMethod("qrcodeStat");
			qrcodeParam.setRmiServiceName(AppProperties.
					getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_wx));
			try {
				RemoteInvoke.getInstance().call(qrcodeParam);
			} catch (Exception e) {
				LogerUtil.error(QrcodeStatJob.class, e, "qrcodeStat error");
				result.setMessage(e.getMessage());
			}
		}
		LogerUtil.debug("QrcodeStatService over");
		JobUtil.addProcessExecute(processId, "二维码统计完成");
		return result;
	}
}
