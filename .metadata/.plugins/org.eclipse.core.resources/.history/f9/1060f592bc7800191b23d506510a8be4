package org.xxjr.summary.kf;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppResult;
import org.ddq.common.core.service.BaseService;
import org.ddq.common.exception.AppException;
import org.ddq.common.exception.DuoduoError;
import org.ddq.common.util.StringUtil;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;
import org.xxjr.busi.util.PageCountUtil;


@Lazy
@Service
public class PageRecordService extends BaseService {
	private static final String NAMESPACE = "PAGERECORD";

	/**
	 * querys
	 * @param params
	 * @return
	 */
	public AppResult query(AppParam params) {
		return super.query(params, NAMESPACE);
	}
	
	/**
	 * queryByPage
	 * @param params
	 * @return
	 */
	public AppResult queryByPage(AppParam params) {
		return super.queryByPage(params, NAMESPACE);
	}
	
	/**
	 * queryCount
	 * @param params
	 * @return
	 */
	public AppResult queryCount(AppParam params) {
		int size = getDao().count(NAMESPACE, super.COUNT,params.getAttr(),params.getDataBase());
		AppResult result = new AppResult();
		result.putAttr(DuoduoConstant.TOTAL_SIZE, size);
		return result;
	}
	
	
	/**
	 * insert
	 * @param params
	 * @return
	 */
	public AppResult insert(AppParam params) {
		return super.insert(params, NAMESPACE);
	}
	
	/**
	 * update
	 * @param params
	 * @return
	 */
	public AppResult update(AppParam params) {
		return super.update(params, NAMESPACE);
	}
	
	/**
	 * delete
	 * @param params
	 * @return
	 */
	public AppResult delete(AppParam params) {
		String ids = (String) params.getAttr("ids");
		AppResult  result = null;
		if (!StringUtils.isEmpty(ids)) {
			for (String id : ids.split(",")) {
				AppParam param = new AppParam();
				param.addAttr("pageId", id);
				
				result = super.delete(param, NAMESPACE);
			}
		} else if (!StringUtils.isEmpty(params.getAttr("pageId"))) {
			result = super.delete(params, NAMESPACE);
		} else {
			throw new AppException(DuoduoError.DELETE_NO_ID);
		}
		return result;
	}
	
	/***
	 * 更新界面浏览次数
	 * @param params
	 * @return
	 */
	public AppResult updatePageBroCount(AppParam params){
		//AppResult result = new AppResult();
		/*Date recordTime = DateUtil.toDateByString(DateUtil.toStringByParttern(new Date(),"yyyy-MM-dd"),"yyyy-MM-dd");
		
		//查询该笔数据是否存在，存在则更新 不存在则插入
		AppParam queryParam = new AppParam();
		queryParam.addAttr("recordTime", recordTime);
		
		result = this.query(queryParam);
		//更新
		if(result.isSuccess() && result.getRows().size() >0){
			params.addAttr("pageId", result.getRow(0).get("pageId"));
			this.update(params);
			
		}else{//不存在
			params.addAttr("recordTime", recordTime);
			this.insert(params);
		}*/
		String sysCode = StringUtil.objectToStr(params.getAttr("sysCode"));
		if (sysCode.endsWith("Count")) {
			sysCode = sysCode.substring(0, sysCode.lastIndexOf("Count"));
			params.addAttr("sysCode", sysCode);
		}
		params.addAttr("sumType", "uv");
		return PageCountUtil.pageCount(params);
		
	}
	
	/***
	 * 按本月查询界面点击次数
	 * @param param
	 * @return
	 */
	public AppResult queryViewByPage(AppParam param) {
		if(param.getCurrentPage() == -1){
			return super.query(param, NAMESPACE,"queryView");
		}else{
			return super.queryByPage(param, NAMESPACE,"queryView", "queryViewCount");
		}
	}

	/***
	 * 按月度查询界面点击次数
	 * @param param
	 * @return
	 */
	public AppResult queryViewByMonth(AppParam param) {
		if(param.getCurrentPage() == -1){
			return super.query(param, NAMESPACE,"queryViewByMonth");
		}else{
			return super.queryByPage(param, NAMESPACE,"queryViewByMonth", "queryViewByMonthCount");
		}
	}
}
