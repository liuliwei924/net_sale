package org.xxjr.job.listener.busi.sum.util;

import java.util.List;
import java.util.Map;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.util.LogerUtil;
import org.llw.ddq.job.util.JobUtil;
import org.ddq.common.core.service.RemoteInvoke;
import org.xxjr.sys.util.NumberUtil;
import org.xxjr.sys.util.ServiceKey;

public class AppSumUtil {
	// 用户注册分渠道统计
	public static AppResult sumAppRegisterCount(Object processId, String today) {
		AppResult result = new AppResult();
		try {
			LogerUtil.log("AppSumUtil sumAppRegisterCount>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> start");
			// 获取统计数据
			AppParam queryParam = new AppParam("sumUserBehaviourService", "registerCount");
			queryParam.addAttr("today", today);
			queryParam.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START
							+ ServiceKey.Key_sum));
			result = RemoteInvoke.getInstance().callNoTx(queryParam);
			List<Map<String, Object>> dataList = result.getRows();
			int size = 0;
			if (dataList.size() > 0) {
				// 将统计数据插入统计表
				AppParam insertParam = new AppParam("sumUserRegisterCountService", "save");
				insertParam.addAttr("today", today);
				insertParam.addAttr("list", dataList);
				insertParam.setRmiServiceName(AppProperties
						.getProperties(DuoduoConstant.RMI_SERVICE_START
								+ ServiceKey.Key_sum));
				result = RemoteInvoke.getInstance().call(insertParam);
				size = NumberUtil.getInt(
						result.getAttr(DuoduoConstant.DAO_Insert_SIZE), 0);
			}
			LogerUtil
					.log("AppSumUtil sumAppRegisterCount >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> end insert count=" + size);
		} catch (Exception e) {
			LogerUtil.error(BookSumUtil.class, e,
					"AppSumUtil sumAppRegisterCount error");
			JobUtil.addProcessExecute(processId, "用户注册分渠道统计错误：" + e.getMessage());
		}
		return result;
	}
}
