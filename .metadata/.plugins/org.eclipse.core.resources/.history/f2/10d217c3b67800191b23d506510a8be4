package org.xxjr.busi.util.push.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ddq.common.util.DateUtil;
import org.ddq.common.util.StringUtil;
import org.ddq.model.cache.RedisUtils;
import org.xxjr.busi.util.borrow.IdCardResolveUtil;
import org.xxjr.busi.util.push.AbstractInsureUtil;
import org.xxjr.busi.util.push.PushCode;
import org.xxjr.busi.util.push.PushPlatformUtils;
import org.xxjr.sys.util.NumberUtil;
import org.xxjr.sys.util.SysParamsUtil;

import com.alibaba.fastjson.JSONObject;
@PushCode(25)
public class PushZpUtil extends AbstractInsureUtil {

	@SuppressWarnings("unchecked")
	@Override
	public Map<String, Object> response(Map<String, Object> row) throws Exception {
		int status = 2;
		Object msg = null;
		String url = SysParamsUtil.getStringParamByKey("insure_zp_cfg_url", "http://www.yyang.net.cn/api/v1/financialbusiness/datahandler");
		String type = SysParamsUtil.getStringParamByKey("insure_zp_cfg_type","insurancet");
		String uid = SysParamsUtil.getStringParamByKey("insure_zp_cfg_uid", "1220");
		Map<String, String> connParam = new HashMap<String, String>();
		connParam.put("type", type);
		connParam.put("uid", uid);
		connParam.put("data", convertData(row));
		Map<String, Object> resMap = PushPlatformUtils.httpPost(url, connParam, true);
		msg = resMap.get("info");
		if (NumberUtil.getInt(resMap.get("status"), 404) == 200) {
			Map<String, Object> data = (Map<String, Object>) resMap.get("data");
			msg = data.get("tips");
			if (data != null && !data.isEmpty()) {
				if (NumberUtil.getInt(data.get("code"), 0) == 1) {
					status = 1;
				}
			}
		}
		
		Map<String, Object> response = new HashMap<String, Object>();
		response.put("message", msg);
		response.put("status", status);
		return response;
	}
	
	private static String convertData(Map<String, Object> row){
		JSONObject dataMap = new JSONObject();
		String mediaid = null;
		int sourceType = NumberUtil.getInt(row.get("sourceType"), 0);
		
		if (sourceType > 0) {
			mediaid = SysParamsUtil.getStringParamByKey("insure_zp_cfg_xykmediaid", "1220_1111");

		}else {
			mediaid = SysParamsUtil.getStringParamByKey("insure_zp_cfg_mediaid", "1220_1010");
		}
		
		dataMap.put("mediaid", mediaid);
		dataMap.put("leads_type", (NumberUtil.getInt(row.get("sourceType"), 0) > 0 ? 5 : 2));
		if (RedisUtils.getRedisService().get("push_isDebug") != null) {
			dataMap.put("realname", "测试");
		}else {
			dataMap.put("realname", row.get("applyName"));
		}
		dataMap.put("sex", NumberUtil.getInt(row.get("sex"), 1) == 1 ? "M" : "F");
		dataMap.put("mobile", row.get("telephone"));
		String birthday = IdCardResolveUtil.getBirthday(StringUtil.objectToStr(row.get("identifyNo")));
		int age = NumberUtil.getInt(row.get("age"), -1);
		birthday = PushPlatformUtils.getBirthDay(birthday, age);
		Date now = DateUtil.toDateByString(birthday, DateUtil.DATE_PATTERN_YYYY_MM_DD);
		dataMap.put("birthday", (int)(now.getTime() / 1000));
		dataMap.put("regdate", (int)(new Date().getTime() / 1000));
		dataMap.put("userAgent", PushPlatformUtils.getUserAgent(row.get("userAgent")));
		dataMap.put("ip", row.get("applyIp"));
		return dataMap.toJSONString();
	}


}
