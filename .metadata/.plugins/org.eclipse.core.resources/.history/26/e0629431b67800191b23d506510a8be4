package org.xxjr.busi.util.wd;

import java.net.URLDecoder;
import java.util.Map;

import org.apache.http.Consts;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.util.EntityUtils;
import org.ddq.common.core.SpringAppContext;
import org.ddq.common.util.JsonUtil;
import org.ddq.common.util.LogerUtil;
import org.ddq.zk.service.RemoteInvoke;
import org.springframework.util.StringUtils;
import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.xxjr.sys.util.ServiceKey;

public class ShortUrlUtil {
	
	/**
	 * 生成短链接
	 * @param param
	 * @return
	 * @throws Exception 
	 */
	public static String createShortUrl(String longUrl) {
		if (StringUtils.isEmpty(longUrl)) {
			return null;
		}
		String shortUrl = null;
		try {
			AppParam linkParam = new AppParam();
			linkParam.setMethod("getShortUrl");
			linkParam.setService("shortLinkService");
			linkParam.addAttr("longUrl", longUrl);
			linkParam.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_sys));
			AppResult result = RemoteInvoke.getInstance().call(linkParam);
			shortUrl = (String) result.getAttr("shortUrl");
			if(StringUtils.isEmpty(shortUrl)){
				//生成失败则调用http://rra.me/api/生成短链接
				shortUrl = rraCreateShort(longUrl);
			}
		} catch (Exception e) {
			LogerUtil.error(ShortUrlUtil.class, e, "createShortUrl");
		}
		return	shortUrl;
	}
	
	/**
	 * http://rra.me/api/生成短链接
	 * @param url
	 * @return
	 * @throws Exception
	 */
	@SuppressWarnings("unchecked")
	public static String rraCreateShort(String longUrl) {
		if(StringUtils.isEmpty(longUrl)){
			return null ;
		}
		String reqUrl = "http://rra.me/api?api=4EBbBfkr9efH&format=json&url="+longUrl;  
		LogerUtil.log("请求短链接地址:" + reqUrl);
		try {
			HttpClient client = HttpClients.createDefault();
			HttpGet httpGet = new HttpGet(reqUrl);// 创建get请求
			HttpResponse httpResponse = client.execute(httpGet);
			HttpEntity entity = httpResponse.getEntity();
			String response = URLDecoder.decode(EntityUtils.toString(entity, Consts.UTF_8),"UTF-8");
			Map<String, Object> map = JsonUtil.getInstance().json2Object(response, Map.class);
		
			if (map != null && !StringUtils.isEmpty(map.get("msg"))) {
				LogerUtil.log("rra create error:" + map.toString());
				return null;
			}
			return map.get("short").toString();
		} catch (Exception e) {
			LogerUtil.error(ShortUrlUtil.class, e, "rra error");
		}
		return null;
	}
}
