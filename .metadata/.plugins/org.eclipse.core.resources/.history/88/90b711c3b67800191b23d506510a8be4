package org.xxjr.busi.util.push.impl;

import java.util.HashMap;
import java.util.Map;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.security.md5.Md5;
import org.ddq.common.util.StringUtil;
import org.ddq.zk.service.RemoteInvoke;
import org.springframework.util.StringUtils;
import org.xxjr.busi.util.borrow.IdCardResolveUtil;
import org.xxjr.busi.util.push.AbstractInsureUtil;
import org.xxjr.busi.util.push.PushCode;
import org.xxjr.busi.util.push.PushPlatformUtils;
import org.xxjr.sys.util.NumberUtil;
import org.xxjr.sys.util.ServiceKey;
import org.xxjr.sys.util.SysParamsUtil;

import com.alibaba.fastjson.JSONObject;
@PushCode(31)
public class PushShenYuUtil extends AbstractInsureUtil {

	@Override
	public Map<String, Object> response(Map<String, Object> row)
			throws Exception {
		int status = 2;
		Object message = null;
		
		StringBuilder url = new StringBuilder(SysParamsUtil.getStringParamByKey("push_shenyu_cfg_url", "http://i.01shenyu.com/api/yiwaixian/reg"));
		String json = getJson(row, url);
		Map<String, Object> resMap = PushPlatformUtils.httpPost(url.toString(), null, json, true, null);
		if (1 == NumberUtil.getInt(resMap.get("errCode"), -1)) {
			status = 1;
		}
		
		message = resMap.get("msg");
		Map<String, Object> response = new HashMap<String, Object>();
		response.put("message", message);
		response.put("status", status);
		return response;
	}
	
	public String getJson (Map<String, Object> row, StringBuilder url) {
		JSONObject body = new JSONObject();
		
		String channels = SysParamsUtil.getStringParamByKey("push_shenyu_cfg_channels", "xxjrong,xxjrong_xyk");
		String key = SysParamsUtil.getStringParamByKey("push_shenyu_cfg_key", "sywl4qpc7p9Ywx");
		String[] channelArray = channels.split(",");
		int sourceType = NumberUtil.getInt(row.get("sourceType"), 0);
		sourceType = Integer.min(sourceType, channelArray.length);
		String telephone = StringUtil.objectToStr(row.get("telephone"));
		url.append("?c=").append(channelArray[sourceType]);
		url.append("&v=").append(Md5.getInstance().encrypt(telephone + channelArray[sourceType] + key).toLowerCase());
		body.put("name", row.get("applyName"));
		body.put("phone", telephone);
		
		String identifyNo = StringUtil.objectToStr(row.get("identifyNo"));
		if (!StringUtils.isEmpty(identifyNo)) {
			String birthday = IdCardResolveUtil.getBirthday(identifyNo);
			Integer sex = IdCardResolveUtil.getSex(identifyNo);
			boolean isSend = SysParamsUtil.getBoleanByKey("push_shenyu_cfg_idcard", false);
			if (isSend) {
				body.put("idcard", identifyNo);
			}else {
				body.put("sex", sex == 1 ? 1 : 0);
				body.put("birthday", birthday);
			}
		}else {
			Integer sex = NumberUtil.getInt(row.get("sex"), 1);
			body.put("sex", sex == 1 ? 1 : 0);
			Integer age = NumberUtil.getInt(row.get("age"), 0);
			body.put("birthday", PushPlatformUtils.getBirthDay(null, age));
		}
		String cityName = StringUtil.objectToStr(row.get("cityName"));
		
		AppParam queryParam = new AppParam("areaService", "queryProvinceByCity");
		queryParam.setRmiServiceName(AppProperties.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_sys));
		queryParam.addAttr("cityName", cityName);
		AppResult queryResult = RemoteInvoke.getInstance().call(queryParam);
		String province = StringUtil.objectToStr(queryResult.getAttr("province"));
		province = province.substring(0, province.length());
		
		if (cityName.endsWith("å¸‚")) {
			cityName = cityName.substring(0, cityName.length());
		}
		body.put("city", cityName);
		body.put("province", province);
		body.put("ua", row.get("userAgent"));
		body.put("ip", row.get("applyIp"));
		return body.toJSONString();
	}
}
