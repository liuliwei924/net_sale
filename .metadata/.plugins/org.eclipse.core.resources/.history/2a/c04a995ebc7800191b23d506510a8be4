package org.xxjr.summary.sms;

import java.util.Date;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppResult;
import org.ddq.common.core.service.BaseService;
import org.ddq.common.exception.AppException;
import org.ddq.common.exception.DuoduoError;
import org.ddq.common.exception.SysException;
import org.ddq.common.web.session.DuoduoSession;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

@Lazy
@Service
public class SmsApplyService extends BaseService {
	private static final String NAMESPACE = "SMSAPPLY";

	/**
	 * 查寻数据
	 * @param params
	 * @return
	 */
	public AppResult query(AppParam params) {
		return super.query(params, NAMESPACE);
	}
	
	/**
	 * queryShow
	 * @param params
	 * @return
	 */
	public AppResult queryShow(AppParam params) {
		return super.queryByPage(params, NAMESPACE, "queryShow", "queryShowCount");
	}
	
	/**
	 * 分页查寻数据
	 * @param params
	 * @return
	 */
	public AppResult queryByPage(AppParam params) {
		return super.queryByPage(params, NAMESPACE);
	}
	
	/**
	 * 查寻分页统计数据
	 * @param params
	 * @return
	 */
	public AppResult queryCount(AppParam params) {
		int size = getDao().count(NAMESPACE, super.COUNT,params.getAttr(),params.getDataBase());
		AppResult result = new AppResult();
		result.putAttr(DuoduoConstant.TOTAL_SIZE, size);
		return result;
	}
	
	
	/**
	 * 添加数据处理
	 * @param params
	 * @return
	 */
	public AppResult insert(AppParam params) {
		AppResult result = new AppResult();
		params.addAttr("createTime", new Date());
		params.addAttr("createBy", DuoduoSession.getUserName());
		result =  super.insert(params, NAMESPACE);
		result.putAttr("applyId", params.getAttr("applyId"));
		return result;
	}
	
	/**
	 * 修改数据处理
	 * @param params
	 * @return
	 */
	public AppResult update(AppParam params) {
		params.addAttr("updateTime", new Date());
		return super.update(params, NAMESPACE);
	}
	
	public AppResult delete(AppParam params) {
		String ids = (String) params.getAttr("ids");
		AppResult  result = null;
		if (!StringUtils.isEmpty(ids)) {
			for (String id : ids.split(",")) {
				AppParam param = new AppParam();
				param.addAttr("applyId", id);
				
				result = super.delete(param, NAMESPACE);
			}
		} else if (!StringUtils.isEmpty(params.getAttr("applyId"))) {
			result = super.delete(params, NAMESPACE);
		} else {
			throw new AppException(DuoduoError.DELETE_NO_ID);
		}
		return result;
	}
	
	/**
	 * 保存
	 * @param params
	 * @return
	 */
	public AppResult save(AppParam params) {
		AppResult result = new AppResult();
		//验证链接id是否存在		
		Object urlId = params.getAttr("urlId");
		Object customerId = params.getAttr("customerId");
		if (StringUtils.isEmpty(urlId) || StringUtils.isEmpty(customerId)) {
			throw new SysException(DuoduoError.UPDATE_NO_PARAMS);
		}
		
		//验证此客户是否有过申请记录
		Object telephone = params.getAttr("telephone");
		AppParam checkParam = new AppParam();
		checkParam.addAttr("telephone", telephone);
		checkParam.addAttr("inStatus", "0,1,3");
		AppResult checkResult = this.query(checkParam);
		//没有正在处理贷款申请的可继续申请
		if (checkResult.getRows().size() == 0) {
			params.addAttr("customerId", customerId);
			params.addAttr("applyTime", new Date());
			params.addAttr("applyTempId", params.getAttr("applyTempId"));
			result = this.insert(params);
		}else {
			throw new SysException("您已经申请过贷款，不能重复申请");
		}
		return result;
	}
	
	
	/**
	 * 查询短信客户订单统计
	 * @param params
	 * @return
	 */
	public AppResult querySmsCount(AppParam params) {
		return super.query(params, NAMESPACE, "querySmsCount");
	}
}
