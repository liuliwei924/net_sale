package org.xxjr.store.web.action.account.xxxj.credit;

import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.exception.ExceptionUtil;
import org.ddq.common.util.LogerUtil;
import org.ddq.common.web.session.DuoduoSession;
import org.ddq.common.web.session.RequestUtil;
import org.ddq.model.cache.RedisUtils;
import org.ddq.zk.service.RemoteInvoke;
import org.springframework.stereotype.Controller;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.xxjr.sys.util.NumberUtil;
import org.xxjr.sys.util.ServiceKey;

/**
 * 信用卡产品信息
 * @author zenghw
 *
 */
@Controller()
@RequestMapping("/account/xj/xjCreditProd/")
public class XjCreditProdAction {
	
	/**
	 * 查询信用卡列表
	 * @param request
	 * @return
	 */
	@RequestMapping("queryProdList")
	@ResponseBody
	public AppResult queryProdList(HttpServletRequest request){
		AppResult result = new AppResult();
		try{
			AppParam params = new AppParam("xjCreditProdService","queryByPage");
			RequestUtil.setAttr(params, request);
			params.setOrderBy("indexNum");
			params.setOrderValue("ASC");
			params.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_XJ));
			result = RemoteInvoke.getInstance().callNoTx(params);
		}catch(Exception e){
			LogerUtil.error(XjCreditProdAction.class, e, "queryProdList error");
			ExceptionUtil.setExceptionMessage(e, result,
					DuoduoSession.getShowLog());
		}
		return result;
	}
	
	
	/**
	 * 添加产品信息
	 * @param request
	 * @return
	 */
	@RequestMapping("addCreditProd")
	@ResponseBody
	public AppResult addCreditProd(HttpServletRequest request){
		AppResult result = new AppResult();
		try{
			AppParam param = new AppParam("xjCreditProdService","insert");
			RequestUtil.setAttr(param, request);
			param.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START
								+ ServiceKey.Key_XJ));
			result = RemoteInvoke.getInstance().call(param);
			int count = NumberUtil.getInt(result.getAttr(DuoduoConstant.DAO_Insert_SIZE),0);
			if(count > 0){
				RedisUtils.getRedisService().del("key_all_xj_prod_list");
			}
		}catch(Exception e){
			LogerUtil.error(XjCreditProdAction.class, e, "addCreditProd error");
			ExceptionUtil.setExceptionMessage(e, result,
					DuoduoSession.getShowLog());
		}
		return result;
	}
	
	
	/**
	 * 编辑产品信息
	 * @param request
	 * @return
	 */
	@RequestMapping("editCreditProd")
	@ResponseBody
	public AppResult editCreditProd(HttpServletRequest request){
		AppResult result = new AppResult();
		String prodId = request.getParameter("prodId");
		if (StringUtils.isEmpty(prodId)) {
			result.setSuccess(false);
			result.setMessage("产品id为空");
			return result;
		}
		try{
			AppParam param = new AppParam("xjCreditProdService","update");
			RequestUtil.setAttr(param, request);
			param.addAttr("updateTime", new Date());
			param.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START
								+ ServiceKey.Key_XJ));
			result = RemoteInvoke.getInstance().call(param);
			int count = NumberUtil.getInt(result.getAttr(DuoduoConstant.DAO_Update_SIZE),0);
			if(count > 0){
				RedisUtils.getRedisService().del("key_all_xj_prod_list");
				RedisUtils.getRedisService().del("key_xj_prod_detail_"+prodId);
			}
		}catch(Exception e){
			LogerUtil.error(XjCreditProdAction.class, e, "editCreditProd error");
			ExceptionUtil.setExceptionMessage(e, result,
					DuoduoSession.getShowLog());
		}
		return result;
	}
	
	
	/**
	 * 查询所有产品信息
	 */
	@RequestMapping("queryCreditList")
	@ResponseBody
	public AppResult queryCreditList(HttpServletRequest request) {
		AppResult result = new AppResult();
		try {
			AppParam param = new AppParam("xjCreditProdService","query");
			param.setOrderBy("indexNum");// 产品序号
			param.setOrderValue("ASC");
			param.setRmiServiceName(AppProperties.
					getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_XJ));
			result = RemoteInvoke.getInstance().callNoTx(param);
			if(result.getRows() != null && result.getRows().size() > 0){
				List<Map<String, Object>> prodList = result.getRows();
				result.putAttr("prodList", prodList);
			}
		} catch (Exception e) {
			LogerUtil.error(this.getClass(), e, "queryCreditList error");
			ExceptionUtil.setExceptionMessage(e, result, DuoduoSession.getShowLog());
		}
		return result;
	}
}
