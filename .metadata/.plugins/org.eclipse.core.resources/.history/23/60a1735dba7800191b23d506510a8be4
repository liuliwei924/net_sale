package org.xxjr.cust.fund;

import java.util.Date;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppResult;
import org.ddq.common.core.service.BaseService;
import org.ddq.common.exception.AppException;
import org.ddq.common.exception.DuoduoError;
import org.ddq.common.util.StringUtil;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

@Lazy
@Service
public class StewardCustBankService extends BaseService {
	private static final String NAMESPACE = "STEWARDCUSTBANK";

	/**
	 * 查寻数据
	 * 
	 * @param params
	 * @return
	 */
	public AppResult query(AppParam params) {
		return super.query(params, NAMESPACE);
	}
	
	/**
	 * 查寻银行卡数据
	 * 
	 * @param params
	 * @return
	 */
	public AppResult queryBankCard(AppParam params) {
		return super.query(params, NAMESPACE,"queryBankCard");
	}

	/**
	 * 分页查寻数据
	 * 
	 * @param params
	 * @return
	 */
	public AppResult queryByPage(AppParam params) {
		return super.queryByPage(params, NAMESPACE);
	}

	/**
	 * 查寻分页统计数据
	 * 
	 * @param params
	 * @return
	 */
	public AppResult queryCount(AppParam params) {
		int size = getDao().count(NAMESPACE, super.COUNT, params.getAttr(),
				params.getDataBase());
		AppResult result = new AppResult();
		result.putAttr(DuoduoConstant.TOTAL_SIZE, size);
		return result;
	}

	/**
	 * 添加数据处理
	 * 
	 * @param params
	 * @return
	 */
	public AppResult insert(AppParam params) {
		AppResult result = new AppResult();
		params.addAttr("createTime", new Date());
		result = super.insert(params, NAMESPACE);
		result.putAttr("bankId", params.getAttr("bankId"));
		return result;
	}

	/**
	 * 修改数据处理
	 * 
	 * @param params
	 * @return
	 */
	public AppResult update(AppParam params) {
		params.addAttr("updateTime", new Date());
		return super.update(params, NAMESPACE);
	}

	/**
	 * 更新绑定银行卡
	 * 
	 * @param params
	 * @return
	 */
	public AppResult updateBindBankCard(AppParam params) {
		params.addAttr("updateTime", new Date());
		int size = getDao().update(NAMESPACE, "updateBindBankCard",
				params.getAttr(), params.getDataBase());
		AppResult result = new AppResult();
		result.putAttr(DuoduoConstant.DAO_Update_SIZE, size);
		return result;
	}

	/**
	 * 删除数据
	 * 
	 * @param params
	 * @return
	 */
	public AppResult delete(AppParam params) {
		String ids = (String) params.getAttr("ids");
		AppResult result = null;
		if (!StringUtils.isEmpty(ids)) {
			for (String id : ids.split(",")) {
				AppParam param = new AppParam();
				param.addAttr("bankId", id);

				result = super.delete(param, NAMESPACE);
			}
		} else if (!StringUtils.isEmpty(params.getAttr("bankId"))) {
			result = super.delete(params, NAMESPACE);
		} else {
			throw new AppException(DuoduoError.DELETE_NO_ID);
		}
		return result;
	}

	/**
	 * 通过CustomerId删除数据
	 * 
	 * @param params
	 * @return
	 */
	public AppResult deleteByCustomerId(AppParam params) {
		int size = getDao().delete(NAMESPACE, "deleteByCustomerId",
				params.getAttr(), params.getDataBase());
		AppResult result = new AppResult();
		result.putAttr(DuoduoConstant.DAO_Delete_SIZE, size);
		return result;
	}

	/**
	 * 先删除数据再插入数据
	 * 
	 * @param params
	 * @return
	 */
	public AppResult deleteAndInsertInfo(AppParam params) {
		int size = getDao().delete(NAMESPACE, "deleteByCustomerId",
				params.getAttr(), params.getDataBase());
		AppResult result = new AppResult();
		result.putAttr(DuoduoConstant.DAO_Delete_SIZE, size);
		if (result.isSuccess()) {
			params.addAttr("createTime", new Date());
			result = super.insert(params, NAMESPACE);
			result.putAttr("bankId", params.getAttr("bankId"));
		}
		return result;

	}

	/**
	 * 更新或保存
	 * @param params
	 * @return
	 */
	public AppResult saveOrUpdate(AppParam params) {
		Object customerId = params.getAttr("customerId");
		Object status = params.getAttr("status");// 绑卡状态
		if (StringUtils.isEmpty(customerId) || StringUtils.isEmpty(status)) {
			throw new AppException(DuoduoError.UPDATE_NO_PARAMS);
		}
		AppResult result = new AppResult();
		AppParam queryParam = new AppParam();
		queryParam.addAttr("customerId", customerId);
		queryParam.addAttr("status", status);
		// 查询预绑卡信息是否存在，若存在则更新，否则插入
		AppResult querResult = this.query(queryParam);
		if (querResult.getRows().size() > 0) {
			String bankId = StringUtil.getString(querResult.getRow(0).get("bankId"));// 绑卡主键id
			params.addAttr("bankId", bankId);
			result = this.update(params);
			result.putAttr("bankId", bankId);
		} else {
			result = this.insert(params);
		}
		return result;
	}
}
