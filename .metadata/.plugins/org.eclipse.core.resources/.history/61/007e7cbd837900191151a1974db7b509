package org.xxjr.job.listener.busi;


import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.core.service.RemoteInvoke;
import org.llw.ddq.job.core.BaseExecteJob;
import org.llw.ddq.job.util.JobConstant;
import org.llw.ddq.job.util.JobUtil;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;
import org.xxjr.sys.util.ServiceKey;

@Lazy
@Component
public class AutoUpdatePriceAndScoreJob implements BaseExecteJob  {
	private static Logger log = LogManager.getLogger(AutoUpdatePriceAndScoreJob.class);
	@Override
	public AppResult executeJob(AppParam param) {
		Object processId = param.getAttr(JobConstant.KEY_processId);
		AppResult result = new AppResult();
		log.info("***********执行自动更新价格开始**************");
		
		try{
			// 更改5天内的单子
			AppParam updateParam = new AppParam("daiBorrowExtService","updatePriceAndScore");
			updateParam.setRmiServiceName(AppProperties.
					getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_busi));
			result = RemoteInvoke.getInstance().call(updateParam);
			
			JobUtil.addProcessExecute(processId, 
					"UpdatePrice size :" + result.getAttr(DuoduoConstant.DAO_Update_SIZE)
					+"UpdateScore Size:" + result.getAttr("updateScoreSize"));
		}catch (Exception e) {
			log.error("AutoUpdatePericeAndScoreJob executeJob error:", e);
			JobUtil.addProcessExecute(processId, 
					"UpdatePrice and score error:" + e.getMessage());
			result.setSuccess(Boolean.FALSE);
			result.setMessage(e.getMessage());
		}
		result.setMessage("成功处理了：" + result.getAttr(DuoduoConstant.DAO_Update_SIZE) + "条记录");
		log.info("***********成功处理了：" + result.getAttr(DuoduoConstant.DAO_Update_SIZE) + "条记录**************");
		return result;
	}
}
