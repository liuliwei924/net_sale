package org.xxjr.fang.util;

import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;

import org.springframework.util.StringUtils;
import org.xxjr.sys.util.SysParamsUtil;

import com.alibaba.fastjson.JSONArray;
/**
 * 根据后台配置json规则返回对应积分
 * @author zhaoSong
 *
 */
public class CustSigninExpUtil {

	public static final String KEY_SIGNIN_EXPRESSION = "signinExpression";
	
	public static String version="1.0";
	
	public static String expScript=null;
	
	private volatile static ScriptEngineManager engineManager;
	
    private static ScriptEngine engine= null;

	/**
	 * 获取用户签到对应的奖励积分
	 * 配置规则为
	 * 以json数组格式，第一个数组对象为配置版本{'version':'1.0'}
	 * 其他对象为 规则表达式exp、返回的值val 例如：{'exp':'days>=6','val':'8'},当天数大于等于6天时，返回8个积分
	 * val对应的值为_days时 _days代表当前变量值
	 * @param days
	 * @return
	 */
	public static Integer getRewardVal(Integer days) {
		String jsonStr = SysParamsUtil
					.getStringParamByKey(KEY_SIGNIN_EXPRESSION,
							"[{'version':'1.0'},{'exp':'days>=6','val':'8'},{'exp':'days<6','val':'_days'}]");
			JSONArray json = JSONArray.parseArray(jsonStr);
			String jsonVersion=json.getJSONObject(0).get("version").toString();
			if(!version.equals(jsonVersion)||StringUtils.isEmpty(expScript)){
				version=jsonVersion;
				StringBuffer exps = new StringBuffer("var days=_days; ");
				for (int i = 1; i < json.size(); i++) {
					String exp = (String) json.getJSONObject(i).get("exp");
					String val = (String) json.getJSONObject(i).get("val");
					if (i > 1)
						exps.append("else ");
					exps.append("if(")
					    .append(exp)
					    .append("){days=")
					    .append(val)
					    .append(";}");
				}
				expScript=exps.toString();
			}
        String exp=expScript.replaceAll("_days", String.valueOf(days));
        Integer reward = 0;
		try {
			reward = (Integer) CustSigninExpUtil.getScriptEngine().eval(exp);
		} catch (ScriptException e) {
			e.printStackTrace();
		}
		return reward;
	}

	   public static ScriptEngine getScriptEngine(){
	    	if(engine == null){
				synchronized (CustSigninExpUtil.class) {
					if(engine == null){
						if(engineManager ==null){
							engineManager =new ScriptEngineManager();
						}
						engine =engineManager.getEngineByName("javascript");
					}
				}
			}
	    	return  engine;
	    }
}
