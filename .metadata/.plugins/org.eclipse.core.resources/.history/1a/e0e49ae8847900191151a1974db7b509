package org.xxjr.job.listener.busi.push;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.ddq.active.mq.message.CustMessageSend;
import org.ddq.active.mq.message.JpushMessageSend;
import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.core.SpringAppContext;
import org.ddq.common.util.LogerUtil;
import org.ddq.common.util.StringUtil;
import org.llw.ddq.job.core.BaseExecteJob;
import org.ddq.common.core.service.RemoteInvoke;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;
import org.xxjr.cust.util.info.CustomerIdentify;
import org.xxjr.sys.util.ServiceKey;
import org.xxjr.sys.util.SysParamsUtil;
import org.xxjr.sys.util.message.MessageConstants;

/**
 * 推荐订单
 * @author 2017-01-11 by liulw 
 *
 */
@Lazy
@Component
public class AutoPushDaiRemindJob implements BaseExecteJob{
	
	public AppResult executeJob(AppParam param) {
		AppResult result = new AppResult();
		
		try{
			String allNotifyRemCitys = SysParamsUtil.getStringParamByKey("allNotifyRemCitys", null);
			if("no".equals(allNotifyRemCitys)){
				return null;
			}
			
			AppParam remondCfgParam = new AppParam("daiRemindConfigService","queryView");
			if(StringUtils.hasText(allNotifyRemCitys) && !"all".equals(allNotifyRemCitys)){
				remondCfgParam.addAttr("cityNames", allNotifyRemCitys);
			}
			remondCfgParam.addAttr("remindStatus", "1");
			remondCfgParam.setCurrentPage(1);
			remondCfgParam.setEveryPage(100);
			remondCfgParam.setOrderBy("timeDiff,autoRob");
			remondCfgParam.setOrderValue("desc,desc");
			remondCfgParam.setRmiServiceName(AppProperties.getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_busi));
			AppResult remondCfgResult = RemoteInvoke.getInstance().call(remondCfgParam);
			
			JpushMessageSend jpushSend = (JpushMessageSend) SpringAppContext.getBean(JpushMessageSend.class);
			CustMessageSend messageSend = (CustMessageSend) SpringAppContext.getBean(CustMessageSend.class);
			
			this.dealWithPush(remondCfgResult.getRows(), jpushSend,messageSend);
			int totalPage = remondCfgResult.getPage().getTotalPage();
			
			LogerUtil.log("AutoPushDaiRemindJob:" + ":StartTime:" + new Date() +":totalPage:" + totalPage);
			
			if (totalPage > 1) {
				for (int i = 1; i < totalPage; i++) {
					remondCfgParam.setCurrentPage(i + 1);
					remondCfgParam.setRmiServiceName(AppProperties.getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_busi));
					remondCfgResult = RemoteInvoke.getInstance().call(remondCfgParam);
					this.dealWithPush(remondCfgResult.getRows(), jpushSend,messageSend);
				}
			}
			result.setMessage("成功处理了：" + totalPage +" 条记录");
			LogerUtil.log("AutoPushDaiRemindJob:" + ":endTime:" + new Date() +":totalPage:" + totalPage);
		}catch(Exception e){
			LogerUtil.error(AutoPushDaiRemindJob.class, e, "查询推送订单失败。。。");
		}
		return result;
	}
	
	/**
	 * 
	 * @param pushList
	 * @param messageSend
	 */
	private void dealWithPush(List<Map<String, Object>> pushList, JpushMessageSend jpushSend,CustMessageSend messageSend){
		for(Map<String, Object> map : pushList){
			try {
				String customerId = map.get("customerId").toString();
				// 获取用户信息，是否开启消息推送
				Map<String, Object> userMap = CustomerIdentify.getCustIdentify(customerId);
				String remindStatus = StringUtil.getString(userMap.get("remindStatus"));// 消息提醒状态 0-关闭 1-开启
				if ("0".equals(remindStatus)) {
					continue;
				}
				// 查符合用户条件的直借
				AppParam qryParam = new AppParam("daiBorrowExtService" , "queryAutoRobList");
				qryParam.addAttrs(map);
				qryParam.addAttr("status", "0");
				qryParam.setRmiServiceName(AppProperties.getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_busi));
				AppResult borrowResult = RemoteInvoke.getInstance().call(qryParam);
				Integer count = borrowResult.getRows().size();
				if(count == 0){
					// 没找到符合条件的直借
					continue;
				}
				Object realName = map.get("realName");
				if(StringUtils.isEmpty(realName)){
					realName = "先生/女士";
				}
				// 推送消息
				pushRemindTip(customerId, count, realName, jpushSend, messageSend);
			} catch (Exception e) {
				LogerUtil.error(AutoPushDaiRemindJob.class, e, "推送订单失败。。。");
			}
		}
	}
	
	/**
	 * 发送推送消息
	 * @param customerId
	 * @param count
	 * @param realName
	 * @param messageSend
	 */
	private void pushRemindTip(String customerId, int count, Object realName, JpushMessageSend jpushSend,CustMessageSend messageSend){
		Map<String,Object> msgParam = new HashMap<String, Object>();
		msgParam.put("count", count);
		msgParam.put("realName", realName);
		
		//封装极光推送消息类型
		msgParam.put("jpushType", MessageConstants.jpush_Type_1);
		msgParam.put("jpushClientType", "xdjl");//推送给信贷经理app
		//推送微信消息
		messageSend.sendCustMessage(customerId, "daiRemindTip", msgParam);
		
		jpushSend.sendCustMessage(customerId, "daiRemindTip", msgParam);
	}
	
}
