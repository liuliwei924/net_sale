package org.xxjr.job.listener.col;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.util.LogerUtil;
import org.ddq.job.core.BaseExecteJob;
import org.ddq.job.util.JobConstant;
import org.ddq.job.util.JobUtil;
import org.ddq.common.core.service.RemoteInvoke;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;
import org.xxjr.sys.util.ServiceKey;

/**
 * 查询协议审核和交易状态
 * 每天8-20点每隔15分钟处理一次
 * @author Administrator
 *
 */
@Lazy
@Component
public class CollectDailyStatusJob implements BaseExecteJob {
	
	@Override
	public AppResult executeJob(AppParam param) {
		LogerUtil.debug("CollectDailyStatusJob start");
		Object processId = param.getAttr(JobConstant.KEY_processId);
		
		AppResult result = new AppResult();
		// 查询交易状态
		try {
			AppParam recordParam = new AppParam("payRecordService",
					"queryTradeStatus");
			recordParam.setRmiServiceName(AppProperties
					.getProperties(DuoduoConstant.RMI_SERVICE_START
							+ ServiceKey.Key_col));
			result = RemoteInvoke.getInstance().call(recordParam);
		} catch (Exception e) {
			LogerUtil.error(CollectDailyIndexJob.class, e, "QueryCollectStatusJob error");
			JobUtil.addProcessExecute(processId, "查询收款状态数据失败:" + e.getMessage());
		}
		JobUtil.addProcessExecute(processId, "共有" + result.getAttr("collectCount") +" 条收款数据。   ");
		return result;
	}
	
	
}
