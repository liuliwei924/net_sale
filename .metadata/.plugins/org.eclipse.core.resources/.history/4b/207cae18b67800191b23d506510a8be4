package org.xxjr.busi.util.lend;

import java.util.Map;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.zk.service.RemoteInvoke;


/**
 * 信贷圈工具类
 * @author liulw 2016-08-31
 *
 */
public class CircleUtil {

	/**
	 * 查询信贷圈
	 * @param customerId
	 * @return
	 */
	public static  AppResult queryCircleList(AppParam params){
		params.setService("custInfoService");
		params.setMethod("queryCircleList");
		params.setRmiServiceName(AppProperties
				.getProperties(DuoduoConstant.RMI_SERVICE_START + "cust"));
		return RemoteInvoke.getInstance().callNoTx(params);
	}
	
	/**
	 * 信贷圈置顶条数
	 * @param params
	 * @return
	 */
	public static int queryCircleTopCount(AppParam params){
		params.setService("circleTopService");
		params.setMethod("queryCount");
		params.setRmiServiceName(AppProperties
				.getProperties(DuoduoConstant.RMI_SERVICE_START + "busi"));
		AppResult result = RemoteInvoke.getInstance().callNoTx(params);
		int count = (Integer)result.getAttr(DuoduoConstant.TOTAL_SIZE);
		result = null;
		return count;
	}
	
	/**
	 * 信贷圈置顶
	 * @param params
	 * @return
	 */
	public static AppResult addCircleTop(AppParam params){
		params.setService("circleTopService");
		params.setMethod("addCircleTop");
		params.setRmiServiceName(AppProperties
				.getProperties(DuoduoConstant.RMI_SERVICE_START + "busi"));
		return RemoteInvoke.getInstance().call(params);
	
	}
	
	/**
	 * 用户信贷圈置顶有效时间(单位:秒)
	 * @param params
	 * @return
	 */
	public static Integer getCricleTopValidTime(String custId){
		AppParam params = new AppParam();
		params.addAttr("customerId", custId);
		params.setService("circleTopService");
		params.setMethod("queryValidTime");
		params.setRmiServiceName(AppProperties
				.getProperties(DuoduoConstant.RMI_SERVICE_START + "busi"));
		Integer miunte = null;
		AppResult result = RemoteInvoke.getInstance().callNoTx(params);
		if(result.getRows().size() > 0){
			Map<String,Object> map = result.getRow(0);
			if( map != null && !map.isEmpty()){
				int second = Integer.parseInt(map.get("validTime").toString());
				miunte = second/60;
			}
		}
		return miunte;
	
	}
}
