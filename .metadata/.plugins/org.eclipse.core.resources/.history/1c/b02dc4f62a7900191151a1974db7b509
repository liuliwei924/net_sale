package org.xxjr.cust.info;

import java.util.Date;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppResult;
import org.common.core.service.BaseService;
import org.ddq.common.core.service.SoaManager;
import org.ddq.common.exception.AppException;
import org.ddq.common.exception.DuoduoError;
import org.ddq.common.web.session.DuoduoSession;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;
import org.xxjr.sys.util.SysParamsUtil;

@Lazy
@Service
public class CustSurveyService extends BaseService {
	private static final String NAMESPACE = "CUSTSURVEY";

	/**
	 * querys
	 * @param params
	 * @return
	 */
	public AppResult query(AppParam params) {
		return super.query(params, NAMESPACE);
	}
	
	/**
	 * queryRespot
	 */
	public AppResult queryRespot(AppParam params) {
		return super.query(params, NAMESPACE, "queryRespot");
	}
	
	/**
	 * queryByPage
	 * @param params
	 * @return
	 */
	public AppResult queryByPage(AppParam params) {
		return super.queryByPage(params, NAMESPACE);
	}
	
	/**
	 * queryCount
	 * @param params
	 * @return
	 */
	public AppResult queryCount(AppParam params) {
		int size = getDao().count(NAMESPACE, super.COUNT,params.getAttr(),params.getDataBase());
		AppResult result = new AppResult();
		result.putAttr(DuoduoConstant.TOTAL_SIZE, size);
		return result;
	}
	
	
	/**
	 * insert
	 * @param params
	 * @return
	 */
	public AppResult insert(AppParam params) {
		params.addAttr("createTime", new Date());
		params.addAttr("createBy", DuoduoSession.getUserName());
		return super.insert(params, NAMESPACE);
	}
	
	/**
	 * update
	 * @param params
	 * @return
	 */
	public AppResult update(AppParam params) {
		return super.update(params, NAMESPACE);
	}
	
	/**
	 * delete
	 * @param params
	 * @return
	 */
	public AppResult delete(AppParam params) {
		String ids = (String) params.getAttr("ids");
		AppResult  result = null;
		if (!StringUtils.isEmpty(ids)) {
			for (String id : ids.split(",")) {
				AppParam param = new AppParam();
				param.addAttr("customerId", id);
				
				result = super.delete(param, NAMESPACE);
			}
		} else if (!StringUtils.isEmpty(params.getAttr("customerId"))) {
			result = super.delete(params, NAMESPACE);
		} else {
			throw new AppException(DuoduoError.DELETE_NO_ID);
		}
		return result;
	}
	
	/**
	 * 更新问题信息
	 * @param params
	 * @return
	 */
	public AppResult updateSurveyInfo(AppParam params) {
		AppResult result = new AppResult();
		int size = this.getDao().update(NAMESPACE, "updateSurveyInfo", params.getAttr(), params.getDataBase());
		result.putAttr(DuoduoConstant.DAO_Update_SIZE, size);
		return result;
	}
	
	
	/**
	 * 更新或保存
	 * @param params
	 * @return
	 */
	public AppResult saveOrUpdate(AppParam params) {
		Object customerId = params.getAttr("customerId");
		Object surveyType = params.getAttr("surveyType");// 问题类型
		Object configId = params.getAttr("configId");
		if (StringUtils.isEmpty(customerId) || StringUtils.isEmpty(surveyType)) {
			throw new AppException(DuoduoError.UPDATE_NO_PARAMS);
		}
		AppResult result = this.updateSurveyInfo(params);
		Integer size = (Integer)result.getAttr(DuoduoConstant.DAO_Update_SIZE);
		if(size == null || size == 0){
			result = this.insert(params);
			if (result.isSuccess()
					&& !StringUtils.isEmpty(configId)
					&& !SysParamsUtil.getBoleanByKey("quetionSendTicketSplit", true)) {
				AppParam param = new AppParam();
				param.setService("custTicketService");
				param.setMethod("quetionSendTicket");
				param.addAttr("customerId", customerId);
				param.addAttr("configId", configId);
				result = SoaManager.getInstance().invoke(param);
			}
		}
		return result;
	}
	
}
