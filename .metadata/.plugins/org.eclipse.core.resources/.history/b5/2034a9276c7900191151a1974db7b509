package org.xxjr.job.listener.xxxj;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.util.DateUtil;
import org.ddq.common.util.LogerUtil;
import org.ddq.common.util.StringUtil;
import org.llw.xxjr.xxxj.record.XjTypeConst;
import org.ddq.common.core.service.RemoteInvoke;
import org.xxjr.sys.util.NumberUtil;
import org.xxjr.sys.util.ServiceKey;

/**
 * 小游戏
 * @author zenghw
 *
 */
public class XjGameUtil {
	
	/**
	 * 结算游戏奖励
	 * 发放天狗吃月游戏奖励
	 * @return
	 */
	public static String sendTgcyGameReward(){
		StringBuffer msgBuf = new StringBuffer();
		try{
			LogerUtil.log("XjGameUtil sendTgcyGameReward>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> start");
			//查询配置奖励列表
			AppParam rewardParam = new AppParam("xjTgcyRewardCfgService","query");
			rewardParam.setRmiServiceName(AppProperties.getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_XJ));
			rewardParam.setOrderBy("indexOrder");
			rewardParam.setOrderValue("ASC");
			AppResult rewResult = RemoteInvoke.getInstance().callNoTx(rewardParam);
			if(rewResult.getRows().size() > 0){
				List<Map<String,Object>> rewList = rewResult.getRows();
				int beginNum = 0;//名次-起
				int endNum = 0;//名次-止
				String createTimeStr = DateUtil.toStringByParttern(DateUtil.getNextDay(new Date(),-1), DateUtil.DATE_PATTERN_YYYY_MM_DD);//前一天时间
				//查询个人排行信息
				AppParam queryOwnParam = new AppParam("xjTgcyOwnService","queryOwnRanking");
				queryOwnParam.setRmiServiceName(AppProperties.getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_XJ));
				queryOwnParam.addAttr("createTimeStr", createTimeStr);
				for (Map<String, Object> rewMap : rewList) {
					String ranking = StringUtil.getString(rewMap.get("ranking"));//名次
					int reward = NumberUtil.getInt(rewMap.get("reward"),0);//奖励狗粮数量
					if (ranking.contains("-")){
						String[] rankingStr = ranking.split("-");
						beginNum =  NumberUtil.getInt(rankingStr[0],0);
						endNum = NumberUtil.getInt(rankingStr[1],0);
					}else {
						beginNum = NumberUtil.getInt(ranking,0);
						endNum = NumberUtil.getInt(ranking,0);
					}
					queryOwnParam.addAttr("beginNum", beginNum);
					queryOwnParam.addAttr("endNum", endNum);
					AppResult ownResult = RemoteInvoke.getInstance().callNoTx(queryOwnParam);
					if(ownResult.getRows().size() > 0){
						//排名信息列表
						List<Map<String,Object>> ownList = ownResult.getRows();
						for (Map<String, Object> ownMap : ownList) {
							int rownum = NumberUtil.getInt(ownMap.get("rownum"),0);//游戏排名
							String ownId = StringUtil.getString(ownMap.get("ownId"));//编号
							String customerId = StringUtil.getString(ownMap.get("customerId"));
							//赠送狗粮
							AppParam updateParam = new AppParam("xjCustLevelService","update");
							updateParam.setRmiServiceName(AppProperties.getProperties(DuoduoConstant.RMI_SERVICE_START+ServiceKey.Key_XJ));
							updateParam.addAttr("customerId", customerId);
							updateParam.addAttr("addAbilityValue", reward);
							AppResult updateResult = RemoteInvoke.getInstance().call(updateParam);
							int updateCount = NumberUtil.getInt(updateResult.getAttr(DuoduoConstant.DAO_Update_SIZE),0);
							if(updateCount > 0){
								//添加狗粮记录
								AppParam addParam = new AppParam("xjRecAbilityRecordService","insert");
								addParam.setRmiServiceName(AppProperties.getProperties(DuoduoConstant.RMI_SERVICE_START+ ServiceKey.Key_XJ));
								addParam.addAttr("customerId", customerId);
								addParam.addAttr("abilityValue", reward);
								addParam.addAttr("typeId", XjTypeConst.ABILITY_GAME_REWARD);//游戏奖励
								addParam.addAttr("flag", "+");
								addParam.addAttr("recoveryTime", DateUtil.getNextDay(new Date(), 14));//魔法狗粮14天
								addParam.addAttr("recoveryStatus",0);
								addParam.addAttr("abilityType","2");//魔法狗粮
								AppResult addResult = RemoteInvoke.getInstance().call(addParam);
								int addCount = NumberUtil.getInt(addResult.getAttr(DuoduoConstant.DAO_Insert_SIZE),0);
								if(addCount > 0){
									AppParam updateOwnParam = new AppParam("xjTgcyOwnService","update");
									updateOwnParam.setRmiServiceName(AppProperties.getProperties(DuoduoConstant.RMI_SERVICE_START+ ServiceKey.Key_XJ));
									updateOwnParam.addAttr("ownId", ownId);
									updateOwnParam.addAttr("reward", reward);
									updateOwnParam.addAttr("status", "1");//已结算
									updateOwnParam.addAttr("settTime", new  Date());
									AppResult updateOwnResult = RemoteInvoke.getInstance().call(updateOwnParam);
									int updateOwnCount = NumberUtil.getInt(updateOwnResult.getAttr(DuoduoConstant.DAO_Update_SIZE),0);
									if(updateOwnCount > 0){
										msgBuf.append("奖励发放成功  游戏排名：").append(rownum).append(" customerId：").append(customerId).append(" 奖励数量:").append(reward);
									}
								}
							} else{
								msgBuf.append("奖励发放失败").append(" customerId：").append(customerId).append(" 奖励数量:").append(reward);
							}
						}
					} else{
						msgBuf.append("未查询到个人排行信息  游戏名次:").append(ranking);
					}
				}
			}
		} catch(Exception ex){
			msgBuf.append("【天狗吃月游戏奖励发放错误")
			.append(",错误信息：").append(ex.toString()).append("】,");
			LogerUtil.error(XjGameUtil.class,ex, "sendTgcyGameReward>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> error");
		}
		LogerUtil.log("XjGameUtil sendTgcyGameReward>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> end");
		return msgBuf.toString();
	}
}
