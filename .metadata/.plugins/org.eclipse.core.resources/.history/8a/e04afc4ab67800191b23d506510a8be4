package org.xxjr.goods.util;

import java.util.HashMap;
import java.util.Map;

import org.ddq.common.constant.DuoduoConstant;
import org.ddq.common.context.AppParam;
import org.ddq.common.context.AppProperties;
import org.ddq.common.context.AppResult;
import org.ddq.common.util.StringUtil;
import org.ddq.zk.service.RemoteInvoke;
import org.springframework.util.StringUtils;
import org.xxjr.cust.util.CustConstant;
import org.xxjr.sys.util.ServiceKey;

/**
 * 公众号积分工具类
 * @author Administrator
 *
 */
public class ScoreUtil {
	
	/**
	 * 查询用户积分排名
	 * @param awardId
	 * @param openid
	 * @return
	 */
	public static Map<String,Object> queryCustRank(Object openid, Object gzhId){
		Map<String,Object> row = new HashMap<String, Object>();
		if(StringUtils.isEmpty(openid)){
			return row;
		}
		AppParam param = new AppParam();
		param.setService("custWxinfoService");
		param.setMethod("queryCustRank");
		param.addAttr("openid", openid);
		param.addAttr("gzhId", gzhId);
		param.setRmiServiceName(AppProperties
				.getProperties(DuoduoConstant.RMI_SERVICE_START + "wx"));
		AppResult result = RemoteInvoke.getInstance().callNoTx(param);
		if(result.getRows().size() > 0){
			row = result.getRow(0);
		}
		return row;
	}
	
	/**
	 * 查询用户积分排名
	 * @param awardId
	 * @param openid
	 * @return
	 */
	public static Map<String,Object> queryLatestExchange(Object openid, Object gzhId){
		AppParam param = new AppParam();
		param.setService("custExchangeService");
		param.setMethod("query");
		param.addAttr("openid", openid);
		param.addAttr("gzhId", gzhId);
		param.setOrderBy("createTime");
		param.setOrderValue("desc");
		param.setRmiServiceName(AppProperties
				.getProperties(DuoduoConstant.RMI_SERVICE_START + "shop"));
		AppResult result = RemoteInvoke.getInstance().callNoTx(param);
		if(result.getRows().size() > 0){
			Map<String,Object> row = result.getRow(0);
			row.put("remark", StringUtil.decodeStr(row.get("remark")));
			return row;
		}
		return new HashMap<String, Object>();
	}
	
	/**
	 * 查询粉丝信息是否存在
	 * @param request
	 */
	public static AppResult checkFans(Map<String,Object> wxInfo){
		//微信信息
		String openid = wxInfo.get(CustConstant.USER_OPENID).toString();
		String gzhId = wxInfo.get(CustConstant.USER_GZHID).toString();
		AppParam param = new AppParam("custWxinfoService", "save");
		param.addAttr("gzhId", gzhId);
		param.addAttr("openid", openid);
		param.setRmiServiceName(AppProperties.
				getProperties(DuoduoConstant.RMI_SERVICE_START + ServiceKey.Key_wx));
		return RemoteInvoke.getInstance().call(param);
	}
	
	/**
	 * 将数字字符串类型数组转成数字型数组
	 * @param sourceArr
	 * @return
	 */
	public static int[] transferToInt(String[] sourceArr){
		int myLength = sourceArr.length;
		int[] intArray = new int[myLength];
		for(int i = 0; i < myLength;i++){
			intArray[i] = Integer.valueOf(sourceArr[i]);
		}
		return intArray;
	}
	
}
