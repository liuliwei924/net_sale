package org.xxjr.busi.util.push.impl;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import org.ddq.common.util.StringUtil;
import org.xxjr.busi.util.CountGradeUtil;
import org.xxjr.busi.util.push.AbstractAllotLoanUtil;
import org.xxjr.busi.util.push.PushCode;
import org.xxjr.busi.util.push.PushPlatformUtils;
import org.xxjr.sys.util.NumberUtil;
import org.xxjr.sys.util.SysParamsUtil;
import org.xxjr.tools.util.AESUtil;

import com.alibaba.fastjson.JSONObject;

@PushCode(36)
public class PushTuanZiUtil extends AbstractAllotLoanUtil {
	
	public Random r = new Random();
	
	@Override
	public Map<String, Object> response(Map<String, Object> row)
			throws Exception {
		int status = 2;
		String url = SysParamsUtil.getStringParamByKey("push_tuanzi_cfg_url", "http://jinrongzixun.com/api/loan/pushwaitui");
		String token = SysParamsUtil.getStringParamByKey("push_tuanzi_cfg_token", "9a1283509a04218b46412833642c12d3");
		
		JSONObject data = new JSONObject();
		
		JSONObject loan_info = new JSONObject();
		loan_info.put("name", row.get("applyName"));
		loan_info.put("mobile", row.get("telephone"));
		loan_info.put("amount", (int)(NumberUtil.getDouble(row.get("loanAmount"), 1) * 10000));
		loan_info.put("city", row.get("cityName"));
		
		JSONObject user_info = new JSONObject();
		boolean fundType = CountGradeUtil.judgeFundType(NumberUtil.getInt(row.get("fundType"), 0));
		user_info.put("house_fund", fundType ? "是" : "否");
		
		boolean socialType = CountGradeUtil.judgeSocialType(NumberUtil.getInt(row.get("socialType"), 0));
		user_info.put("social_insurance", socialType ? "是" : "否");
		
		boolean carType = CountGradeUtil.judgeCar(NumberUtil.getInt(row.get("carType"), 0));
		user_info.put("has_car", carType ? "是" : "否");
		
		boolean houseType = CountGradeUtil.judgeHouse(NumberUtil.getInt(row.get("houseType"), 0));
		user_info.put("has_estate", houseType ? "是" : "否");
		
		int creditType = NumberUtil.getInt(row.get("creditType"), 0);
		user_info.put("credit", (creditType != 2 && creditType > 0) ? "是" : "否");
		
		int havePinan = NumberUtil.getInt(row.get("havePinan"), 0);
		user_info.put("has_weilidai", havePinan > 0 ? "是" : "否");
		
		String identifyNo = StringUtil.objectToStr(row.get("identifyNo"));
		
		if (PushPlatformUtils.isPushTest()) {
			identifyNo = "421000198505058514";
		}
		
		user_info.put("idcard", identifyNo);
		user_info.put("birthday", PushPlatformUtils.getBirthDay(identifyNo, 28));
		user_info.put("sex", row.get("sex"));
		
		boolean insurType = CountGradeUtil.judgeInsurType(NumberUtil.getInt(row.get("insurType"), 0));
		user_info.put("life_insurance", insurType ? "是" : "否");
		
		int workType = NumberUtil.getInt(row.get("workType"), 1);
		int profession_type = workType == 4 ? 1 : 2;
		user_info.put("profession_type", profession_type);
		
		if (profession_type == 1) {
			int how_to_pay = NumberUtil.getInt(row.get("wagesType"), 1);
			user_info.put("how_to_pay", how_to_pay);
			
			int income = NumberUtil.getInt(row.get("income"), 0);
			if (income <= 0) {
				income = NumberUtil.getInt(row.get("cashMonth"), 0);
			}
			if (income <= 0) {
				income = (r.nextInt(3000) + 2000);
			}
			user_info.put("income", income);
		}
		
		if (profession_type == 2) {
			user_info.put("is_self_company", 0);
			user_info.put("company_identity", 0);
			user_info.put("years_of_operation", 0);
		}
		
		data.put("loan_info", loan_info);
		data.put("user_info", user_info);
		String dataStr = AESUtil.encrypt(data.toJSONString(), token.substring(0, 16));
		
		JSONObject content = new JSONObject();
		content.put("token", token);
		content.put("data", dataStr);
		
		Map<String, Object> resultMap = PushPlatformUtils.httpPost(url, null, content.toJSONString(), true, null);
		
		if (NumberUtil.getInt(resultMap.get("responseCode"), -1) == 200) {
			status = 1;
		}
		Map<String, Object> resMap = new HashMap<String, Object>();
		resMap.put("status", status);
		resMap.put("message", resultMap.get("responseToken")+ ":" + resultMap.get("responseMsg"));
		return resMap;
	}

}
